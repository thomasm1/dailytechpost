{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.module.ts","./src/app/components/blogs-public/blog-modal/blog-modal.component.ts","./src/app/components/blogs-public/blog-modal/blog-modal.component.html","./src/app/components/blogs-public/blog/blog.component.ts","./src/app/components/blogs-public/blog/blog.component.html","./src/app/components/blogs-public/blogs-grid/blogs-grid.component.ts","./src/app/components/blogs-public/blogs-grid/blogs-grid.component.html","./src/app/components/blogs-public/blogs-list/blogs-list.component.ts","./src/app/components/blogs-public/blogs-list/blogs-list.component.html","./src/app/components/blogs-public/blogs-store.service.ts","./src/app/components/blogs-public/blogs.service.ts","./src/app/components/blogs-public/blogs/blogs.component.ts","./src/app/components/blogs-public/blogs/blogs.component.html","./src/app/components/crypto/chaindata/chaindata.component.ts","./src/app/components/crypto/chaindata/chaindata.component.html","./src/app/components/crypto/nft-add/nft-add.component.ts","./src/app/components/crypto/nft-add/nft-add.component.html","./src/app/components/crypto/nft/nft.component.ts","./src/app/components/crypto/nft/nft.component.html","./src/app/components/crypto/nfts.component.ts","./src/app/components/crypto/nfts.component.html","./src/app/components/crypto/nfts.service.ts","./src/app/components/features/starwars/starwars.component.ts","./src/app/components/features/starwars/starwars.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/layout/footer.component.ts","./src/app/components/layout/footer.component.html","./src/app/components/layout/menu.component.ts","./src/app/components/layout/menu.component.html","./src/app/components/layout/sidenav-list/sidenav-list.component.ts","./src/app/components/layout/sidenav-list/sidenav-list.component.html","./src/app/components/layout/title-bar/title-bar.component.ts","./src/app/components/nasa/nasa.component.ts","./src/app/components/nasa/nasa.component.html","./src/app/components/nasa/nasa.service.ts","./src/app/components/news/news-article-results/news-article-results.component.ts","./src/app/components/news/news-article-results/news-article-results.component.html","./src/app/components/news/news-article-search/news-article-search.component.ts","./src/app/components/news/news-article-search/news-article-search.component.html","./src/app/components/news/news-page/news-page.component.ts","./src/app/components/news/news-page/news-page.component.html","./src/app/components/news/news-tool-bar/news-tool-bar.component.ts","./src/app/components/news/news-tool-bar/news-tool-bar.component.html","./src/app/components/news/news.service.ts","./src/app/components/post-dir/post-cancel/post-cancel.component.ts","./src/app/components/post-dir/post-data.service.ts","./src/app/components/post-dir/post/post.component.ts","./src/app/components/post-dir/post/post.component.html","./src/app/components/post-dir/posts-list/posts-list.component.ts","./src/app/components/post-dir/posts-list/posts-list.component.html","./src/app/components/post-dir/posts-viewer/posts-viewer.component.ts","./src/app/components/post-dir/posts-viewer/posts-viewer.component.html","./src/app/components/user/admin.component.ts","./src/app/components/user/admin.component.html","./src/app/components/user/register/register.component.ts","./src/app/components/user/register/register.component.html","./src/app/components/user/signon/signon.component.ts","./src/app/components/user/signon/signon.component.html","./src/app/components/util/animation/animation.component.ts","./src/app/components/util/animation/animation.component.html","./src/app/components/writing/current-writing/current-writing.component.ts","./src/app/components/writing/current-writing/current-writing.component.html","./src/app/components/writing/current-writing/stop-writing.component.ts","./src/app/components/writing/grid-writings/grid-writings.component.ts","./src/app/components/writing/grid-writings/grid-writings.component.html","./src/app/components/writing/new-writing/new-writing.component.ts","./src/app/components/writing/new-writing/new-writing.component.html","./src/app/components/writing/past-writings/past-writings.component.ts","./src/app/components/writing/past-writings/past-writings.component.html","./src/app/components/writing/writing.component.ts","./src/app/components/writing/writing.component.html","./src/app/components/writing/writing.service.ts","./src/app/material.module.ts","./src/app/models/Post.ts","./src/app/reducers/app.reducer.ts","./src/app/reducers/auth.actions.ts","./src/app/reducers/auth.reducer.ts","./src/app/reducers/news-search.reducer.ts","./src/app/reducers/news.reducer.ts","./src/app/reducers/ui.actions.ts","./src/app/reducers/ui.reducer.ts","./src/app/reducers/writing.actions.ts","./src/app/reducers/writing.reducer.ts","./src/app/service/auth/admin-authentication.service.ts","./src/app/service/auth/admin-guard.service.ts","./src/app/service/auth/http-intercepter-basic-auth.service.ts","./src/app/service/auth/jwt-auth.service.ts","./src/app/service/auth/user-guard.service.ts","./src/app/service/data/admin-data.service.ts","./src/app/service/groot.service.ts","./src/app/service/keys.service.ts","./src/app/service/logging.service.ts","./src/app/service/ui.service.ts","./src/app/utility/observable.ts","./src/app/utility/pipe-capitalize-category.pipe.ts","./src/app/utility/qrcode/qrcode.component.ts","./src/app/utility/qrcode/qrcode.component.html","./src/app/utility/safe-html.pipe.ts","./src/app/utility/store.service.ts","./src/app/writing.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ps\": \"./node_modules/moment/locale/ar-ps.js\",\n\t\"./ar-ps.js\": \"./node_modules/moment/locale/ar-ps.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku-kmr\": \"./node_modules/moment/locale/ku-kmr.js\",\n\t\"./ku-kmr.js\": \"./node_modules/moment/locale/ku-kmr.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SignonComponent } from './components/user/signon/signon.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { AdminComponent } from './components/user/admin.component';\r\nimport { PostsListComponent } from './components/post-dir/posts-list/posts-list.component';\r\nimport { PostComponent } from './components/post-dir/post/post.component';\r\nimport { PostsViewerComponent } from './components/post-dir/posts-viewer/posts-viewer.component';\r\nimport { BlogsListComponent } from './components/blogs-public/blogs-list/blogs-list.component';\r\nimport { BlogComponent } from './components/blogs-public/blog/blog.component';\r\nimport { WritingComponent } from './components/writing/writing.component';\r\n\r\nimport { AdminGuardService } from './service/auth/admin-guard.service';\r\nimport { UserGuardService } from './service/auth/user-guard.service';\r\nimport { BlogsComponent } from './components/blogs-public/blogs/blogs.component';\r\nimport { BlogsGridComponent } from './components/blogs-public/blogs-grid/blogs-grid.component';\r\nimport { NasaComponent } from './components/nasa/nasa.component';\r\nimport { NewsPageComponent } from './components/news/news-page/news-page.component';\r\nimport { NewsArticleSearchComponent } from './components/news/news-article-search/news-article-search.component';\r\n\r\nimport { StarwarsComponent } from './components/features/starwars/starwars.component';\r\nimport { MarvelComponent } from './components/features/marvel/marvel.component'; \r\n\r\nconst routes: Routes = [ \r\n  { path: '', component: BlogsListComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  \r\n  { path: 'blogs', component: BlogsListComponent }, \r\n  { path: 'stats', component: BlogsGridComponent }, \r\n  { path: 'blogs/:cat', component: BlogsComponent},\r\n  { path: 'blog/:id', component: BlogComponent },\r\n  \r\n  { path: 'posts', component: PostsViewerComponent },\r\n  { path: 'writing', component: WritingComponent,  canActivate:[UserGuardService]},\r\n  { path: 'nasa', component: NasaComponent },\r\n  // { path: 'marvel', component: MarvelComponent },\r\n  // { path: 'marvel/:guardiansId', component: MarvelComponent },\r\n  { path: 'news', component: NewsPageComponent },\r\n  { path: 'search', component: NewsArticleSearchComponent },\r\n\r\n  { path: 'admin/posts', component: PostsListComponent},\r\n  { path: 'admin/post/:id', component: PostComponent, canActivate:[AdminGuardService]},\r\n  { path: 'admin/:name', component: AdminComponent, canActivate:[AdminGuardService]},\r\n\r\n\r\n  { path: 'login', component: SignonComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  // { path: 'writing', loadChildren: './writing.module#WritingModule', canLoad: [UserGuardService] },\r\n  { path: '**', component: HomeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [UserGuardService],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NasaService } from './components/nasa/nasa.service';\r\n\r\nimport { JwtAuthService } from './service/auth/jwt-auth.service';\r\nimport { KeysService } from './service/keys.service';\r\nimport { LoggingService } from './service/logging.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Dailytech Modal';\r\n\r\n  constructor(\r\n    private authService: JwtAuthService,\r\n    private keysService: KeysService,\r\n    private nasaKey:NasaService,\r\n    private loggingService: LoggingService,\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.initAuthListener();\r\n    this.keysService.getGoogleApi();\r\n    this.nasaKey.getNasaKey();\r\n    this.loggingService.printLog('AppComponent ngOnInit'); \r\n  }\r\n}\r\n","<mat-sidenav-container fullscreen>\r\n  <mat-sidenav #sidenav role=\"navigation\">\r\n    <app-sidenav-list (closeSidenav)=\"sidenav.close()\"></app-sidenav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <app-menu (sidenavToggle)=\"sidenav.toggle()\"></app-menu>\r\n    <main>\r\n      <!-- <app-loader></app-loader> -->\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n   <app-footer></app-footer>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { environment } from '../environments/environment';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducers } from './reducers/app.reducer';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n// PIPES\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { PipeCapitalizeCategoryPipe } from './utility/pipe-capitalize-category.pipe';\r\nimport { SafeHtmlPipe } from './utility/safe-html.pipe';\r\n\r\n// SERVICES\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { HttpIntercepterBasicAuthService } from './service/auth/http-intercepter-basic-auth.service';\r\nimport { JwtAuthService } from './service/auth/jwt-auth.service';\r\nimport { WritingService } from './components/writing/writing.service';\r\nimport { KeysService } from './service/keys.service';\r\nimport { UiService } from './service/ui.service';\r\nimport { NewsService } from './components/news/news.service';\r\n// import { LoggingService } from './service/logging.service';\r\n\r\n// COMPONENTS\r\nimport { AppComponent } from './app.component';\r\nimport { PostComponent } from './components/post-dir/post/post.component';\r\nimport { AnimationComponent } from './components/util/animation/animation.component';\r\nimport { PostsViewerComponent } from './components/post-dir/posts-viewer/posts-viewer.component';\r\nimport { BlogComponent } from './components/blogs-public/blog/blog.component';\r\nimport { BlogsListComponent } from './components/blogs-public/blogs-list/blogs-list.component';\r\n\r\nimport { SidenavListComponent } from './components/layout/sidenav-list/sidenav-list.component';\r\nimport { FooterComponent } from './components/layout/footer.component';\r\nimport { MenuComponent } from './components/layout/menu.component';\r\nimport { PostCancelComponent } from './components/post-dir/post-cancel/post-cancel.component';\r\n\r\nimport { AuthModule } from './auth.module';\r\nimport { WritingModule } from './writing.module';\r\nimport { BlogModalComponent } from './components/blogs-public/blog-modal/blog-modal.component';\r\nimport { BlogsComponent } from './components/blogs-public/blogs/blogs.component';\r\nimport { BlogsGridComponent } from './components/blogs-public/blogs-grid/blogs-grid.component';\r\nimport { NasaComponent } from './components/nasa/nasa.component';\r\n\r\n// NEWS\r\nimport { NewsPageComponent } from './components/news/news-page/news-page.component';\r\nimport { NewsArticleSearchComponent } from './components/news/news-article-search/news-article-search.component';\r\nimport { NewsArticleResultsComponent } from './components/news/news-article-results/news-article-results.component';\r\nimport { NewsToolBarComponent } from './components/news/news-tool-bar/news-tool-bar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\n// CRYPTO\r\nimport { NftsComponent } from './components/crypto/nfts.component';\r\nimport { NftComponent } from './components/crypto/nft/nft.component';\r\nimport { NftAddComponent } from './components/crypto/nft-add/nft-add.component';\r\nimport { ChaindataComponent } from './components/crypto/chaindata/chaindata.component';\r\nimport { QrcodeComponent } from './utility/qrcode/qrcode.component';\r\n\r\n// FEATURES \r\nimport { StarwarsComponent } from './components/features/starwars/starwars.component';\r\nimport { MarvelComponent } from './components/features/marvel/marvel.component';\r\nimport { GrootService } from './service/groot.service';\r\n// import { WritingRoutingModule } from './writing-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AnimationComponent,\r\n    FooterComponent,\r\n    SidenavListComponent,\r\n    MenuComponent,\r\n    PostComponent,\r\n    PostsViewerComponent,\r\n    BlogComponent,\r\n    BlogsListComponent,\r\n    PostCancelComponent,\r\n    BlogModalComponent,\r\n    BlogsComponent,\r\n    BlogsGridComponent,\r\n    NasaComponent,\r\n    //CRYPTO\r\n    NftsComponent,\r\n    NftComponent,\r\n    NftAddComponent,\r\n    ChaindataComponent,\r\n    \r\n    // TECH NEWS\r\n    NewsPageComponent,\r\n    NewsArticleSearchComponent,\r\n    NewsArticleResultsComponent,\r\n    NewsToolBarComponent,\r\n    HomeComponent,\r\n    \r\n    PipeCapitalizeCategoryPipe,\r\n    SafeHtmlPipe,\r\n    QrcodeComponent,\r\n    StarwarsComponent,\r\n\r\n    /////// AUTH MODULE ///////\r\n    // AdminComponent,\r\n    // PostsListComponent,\r\n    // RegisterComponent,\r\n    // SignonComponent,\r\n    // TitleBarComponent,\r\n\r\n    ////// WRITING MODULE //////\r\n    // CurrentWritingComponent,\r\n    // NewWritingComponent,\r\n    // GridWritingsComponent,\r\n    // PastWritingsComponent,\r\n    // StopWritingComponent,\r\n    // WritingComponent\r\n  ],\r\n  imports: [\r\n    NgxQRCodeModule,\r\n    MatDialogModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n    // StoreModule.forRoot({ui: appReducer}),\r\n    StoreModule.forRoot( reducers ),\r\n\r\n\r\n    WritingModule,\r\n    AuthModule,\r\n    // WritingRoutingModule,\r\n\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    KeysService,\r\n    JwtAuthService,\r\n    NewsService,\r\n    WritingService,\r\n    UiService,\r\n    TitleCasePipe,\r\n    SafeHtmlPipe,\r\n    GrootService, \r\n    // LoggingService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpIntercepterBasicAuthService, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [PostCancelComponent, MatDialogModule]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { TitleBarComponent } from './components/layout/title-bar/title-bar.component';\r\nimport { MaterialModule } from './material.module';\r\n\r\n\r\nimport { PostsListComponent } from './components/post-dir/posts-list/posts-list.component';\r\nimport { AdminComponent } from './components/user/admin.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { SignonComponent } from './components/user/signon/signon.component'; \r\n// import { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent, \r\n    SignonComponent, \r\n    TitleBarComponent,  \r\n    AdminComponent, \r\n    PostsListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    AngularFireAuthModule, \r\n    // AuthRoutingModule\r\n  ], \r\n  exports: [ \r\n    CommonModule, \r\n    FormsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    AngularFireAuthModule, \r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit, Input, Optional, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Post } from 'src/app/models/Post';\r\nimport { BlogsStore } from '../blogs-store.service'; \r\nimport { BlogsService } from '../blogs.service';\r\nimport { SafeHtmlPipe } from 'src/app/utility/safe-html.pipe';\r\n\r\n@Component({\r\n  selector: 'app-blog-modal',\r\n  templateUrl: './blog-modal.component.html',\r\n  styleUrls: ['./blog-modal.component.scss']\r\n})\r\nexport class BlogModalComponent implements OnInit {\r\n  modalLoading: boolean = true;\r\n  idFromBlogList: string;\r\n  fromDialog: string;\r\n  blog: Post;\r\n\r\n  constructor(\r\n    \r\n    private blogsStore: BlogsStore,\r\n    private blogsService: BlogsService,\r\n    public dialogRef: MatDialogRef<BlogModalComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n      this.idFromBlogList = data.idValue;\r\n      console.log(\"this.fromBlogList string-\" + this.idFromBlogList);\r\n\r\n        this.blogsService.getBlog(this.idFromBlogList).subscribe((response) =>{\r\n          this.modalLoading = false;\r\n          this.blog = response;\r\n          console.log(this.blog);\r\n        })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  saveMaterial(id: number, post : Post) {    \r\nthis.blogsStore.saveBlog(id,post).subscribe();\r\n    this.dialogRef.close({ event: 'save', data: this.fromDialog });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close({ event: 'close', data: this.fromDialog });\r\n  }\r\n}\r\n","<mat-spinner *ngIf=\"modalLoading\"></mat-spinner>\r\n<div *ngIf=\"blog\" class=\"blog-top\">\r\n  <span class=\"category\">{{ blog.cat3 }}</span>\r\n  <!-- <button class=\"btnModal\" mat-stroked-button>Modal</button> -->\r\n  <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n  <hr class=\"bar-title\">\r\n  <h6 class=\"blog-title\" [innerHTML]=\"blog.title | safeHtml\"></h6>\r\n\r\n  <div>\r\n    <ul class=\"view-blog\">\r\n      <mat-card style=\"margin: 0px 0px 0px 0px !important;\"  class=\"blog-box\">\r\n        <span style=\"font-size:.8rem !important;  color:rgb(4, 4, 56) !important;\"  [innerHTML]=\"blog.post | safeHtml\"></span>\r\n        <hr>\r\n        <span [innerHTML]=\"blog.blogcite | safeHtml\"></span>\r\n      </mat-card>\r\n\r\n    </ul>\r\n  </div>\r\n\r\n  <div>\r\n    <!-- REACTION or Navigation-->\r\n    <!-- <mat-form-field>\r\n          <input matInput [(ngModel)]=\"fromDialog\" placeholder=\"Enter value to send back\">\r\n      </mat-form-field> -->\r\n  </div>\r\n  <div >\r\n    <!-- <button mat-raised-button class=\"mat-elevation-z8\" (click)=\"saveMaterial(-1, blog);closeDialog()\">Save</button> -->\r\n    <button fxFlex fxLayout=\"row\" fxLayoutAlign=\"center\" mat-raised-button class=\"mat-elevation-z8\" (click)=\"closeDialog()\">Close</button>\r\n  </div>\r\n</div>","import { Component, OnInit, OnDestroy, Input, EventEmitter, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BlogsService } from '../blogs.service';\r\nimport { Post } from 'src/app/models/Post';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-blog',\r\n  templateUrl: './blog.component.html',\r\n  styleUrls: ['./blog.component.scss']\r\n})\r\nexport class BlogComponent implements OnInit, OnDestroy {\r\n\r\n  blogSubscription: Subscription;\r\n\r\n  @Input() blogName: string;\r\n  @Output() blogClicked = new EventEmitter();\r\n  private id: string;\r\n  public blog: Post;\r\n  blogsLoading = true;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private blogsService: BlogsService) { }\r\n\r\n  ngOnInit() {\r\n    this.getBlog();\r\n  }\r\n\r\n  getBlog() {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.id = params.get('id');\r\n      this.blogSubscription = this.blogsService.getBlog(this.id).subscribe((response) =>{   this.blog = response;\r\n            console.log(this.blog)})\r\n\r\n          this.blogsLoading = false;\r\n    })\r\n  }\r\n\r\n  onClicked() {\r\n    // this.blogClicked.emit();\r\n    this.blogsService.hideBlog(this.blogName);\r\n  }\r\n\r\n   ngOnDestroy() {\r\n    if (this.blogSubscription) {\r\n      this.blogSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // addBlog(blogName: string) {\r\n  //   this.blogs.push(blogName);\r\n  //   this.blogsUpdated.next();\r\n  // }\r\n\r\n  // getBlogsArray() {\r\n  //   console.log(this.blogs);\r\n  //   return [...this.blogs];\r\n  // }\r\n\r\n  // hideBlog(blogName: string) {\r\n  //   this.blogs = this.blogs.filter(b => b !== blogName);\r\n  //   this.blogsUpdated.next();\r\n  // }\r\n\r\n\r\n}\r\n","<hr class=\"bar-white\" />\r\n<h2><span class=\"daily-tech monoton text-box\">OUR DAILY TECH</span></h2>\r\n<hr class=\"bar-white\"/>\r\n<!-- <article class=\"blog\" (click)=\"onClicked()\">\r\n    <div>{{ blog  }}</div>\r\n</article> -->\r\n<div class=\"outer-div\">\r\n  <mat-spinner *ngIf=\"blogsLoading\" class=\"centerSpinner\"></mat-spinner>\r\n  <div  class=\"inner-div\" *ngIf=\"blog\">\r\n    <span class=\"category\">{{ blog.cat3 }}</span>\r\n    <!-- <button class=\"btnModal\" mat-stroked-button>Modal</button> -->\r\n  <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n    <h5 class=\"blog-title\" [innerHTML]=\"blog.title | safeHtml\"></h5>\r\n    <p [innerHTML]=\"blog.post | safeHtml\"></p>\r\n    <p [innerHTML]=\"blog.blogcite | safeHtml\"></p>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { BlogsService } from '../../blogs-public/blogs.service';\r\nimport { MatCard, MatCardActions } from '@angular/material/card';\r\nimport { MatCheckbox } from '@angular/material/checkbox';\r\nimport { MatFormField } from '@angular/material/form-field';\r\n \r\n  type Post = { \r\n    id: number,\r\n    did?: string,\r\n    date?: string,\r\n    author?: string,\r\n    monthOrder?: string,\r\n    cat3?: string,\r\n    title: string,\r\n    post?: string,\r\n    blogcite?: string,\r\n    username?: string,\r\n  }\r\n\r\n\r\n@Component({ \r\n    selector: 'app-blogs-grid',\r\n    templateUrl: './blogs-grid.component.html',\r\n    styleUrls: ['./blogs-grid.component.scss']\r\n  })\r\n  \r\n  export class BlogsGridComponent implements OnInit {\r\n    categories: string[] = [];\r\n    blogs: Post[] = []; \r\n    categoriesForm: FormGroup;\r\n    fetchBlogsEnabled: boolean = false;\r\n    \r\n\r\n    constructor(private fb: FormBuilder, private blogsService: BlogsService) { \r\n        this.categoriesForm = this.fb.group({\r\n            selectedCategories: this.fb.array([])\r\n    });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        console.log(\"... awaiting blogs categories selection\");\r\n        this.getCategories();\r\n    }\r\n    get selectedCategories() {\r\n        return this.categoriesForm.get('selectedCategories') as FormArray;\r\n    }\r\n    getCategories() {\r\n        this.blogsService.getCategories().subscribe((categories: string[]) => {\r\n            this.categories = categories;\r\n            // this.addCheckboxes();\r\n        });\r\n    }\r\n    onCategoryChange(event: any): void {\r\n        const selectedCategories = this.categoriesForm.value.selectedCategories as FormArray;\r\n        if(event.target.checked) {\r\n            selectedCategories.push(this.fb.control(event.target.value));\r\n        } \r\n        else {\r\n            const categoryIndex = selectedCategories.controls.findIndex(x => x.value === event.target.value);\r\n            selectedCategories.removeAt(categoryIndex);\r\n        }\r\n        this.fetchBlogsEnabled = selectedCategories.length > 0;\r\n    }\r\n\r\n    fetchBlogs():void {\r\n        const selectedCategories = this.categoriesForm.value.selectedCategories;\r\n        this.blogsService.getBlogsByCategories(selectedCategories).subscribe((blogs: Post[]) => {\r\n            this.blogs = blogs;\r\n        });\r\n    }\r\n\r\n\r\n    // addCheckboxes() {\r\n    //     this.categories.forEach(() => this.selectedCategories.push(this.fb.control(false)));\r\n    // }\r\n  }\r\n","<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>Blogs by Category</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content> \r\n\r\n<div *ngIf=\"blogs.length > 0\">\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Title</th>\r\n                <th>Blog </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let blog of blogs\">\r\n                <td>{{ blog.cat3 }}</td>\r\n                <td>{{ blog.title }}</td>\r\n                <td>{{ blog.post }}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n       \r\n<div>\r\n    <button (click)=\"getCategories()\">Retrieve blogs by Category</button>\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n            SELECT     &nbsp; CATEGORIES\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let category of categories\">\r\n            <td>\r\n                <input type=\"checkbox\" (change)=\"onCheckboxChange($event, category)\" />\r\n            </td>\r\n            <td>{{ blog.cat3  }}</td>\r\n        </tr>\r\n    </tbody>\r\n    </table>\r\n    <button [disabled]=\"!fetchBlogsEnabled\" (click)=\"fetchBlogs()\">Fetch Blogs</button>\r\n</div>\r\n    </mat-card-actions>\r\n</mat-card>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n// import { Subject } from 'rxjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router'; \r\nimport { BlogsService } from '../blogs.service';\r\nimport { Post } from 'src/app/models/Post';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BlogModalComponent } from '../blog-modal/blog-modal.component';\r\nimport { AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-blogs-list',\r\n  templateUrl: './blogs-list.component.html',\r\n  styleUrls: ['./blogs-list.component.scss'],\r\n})\r\nexport class BlogsListComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  blogsSubscription: Subscription;\r\n\r\n  username: string;\r\n  // blogsUpdated = new Subject();\r\n  blog: Post;\r\n  blogs = [];\r\n\r\n  blogsWeb = [];\r\n  blogsBlockchain = [];\r\n  blogsAI = [];\r\n  blogsSoc = [];\r\n  blogsQuantum = [];\r\n\r\n  someVar = '<h5>h5-title</h5>';\r\n  blogsLoading = true;\r\n  dialogValue: string;\r\n  sendValue: string;\r\n\r\n  constructor(\r\n    private blogsService: BlogsService,\r\n    public dialog: MatDialog,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.username = sessionStorage.getItem('AuthenticatedUser');\r\n\r\n    this.refreshBlogs();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  //   this.blogUpdater(this.blogs);\r\n  }\r\n\r\n  refreshBlogs() {\r\n    this.blogsSubscription = this.blogsService\r\n      .getAllBlogs()\r\n      .subscribe((response) => {\r\n        // console.log(response);\r\n        this.blogs = response;\r\n        this.categoryUpdater(this.blogs)\r\n        this.blogsLoading = false;\r\n      });\r\n  }\r\n\r\n  categoryUpdater(blogs) {\r\n        // console.log(blogs);\r\n        this.blogsWeb = blogs.filter((x) => x.cat3 == 'Web Dev Affairs');\r\n        this.blogsBlockchain = blogs.filter( (x) => x.cat3 == 'Musing Blockchain'  );\r\n        this.blogsAI =  blogs.filter((x) => x.cat3 == 'A.I.Now.');\r\n        this.blogsSoc = blogs.filter( (x) => x.cat3 == 'Sociology Tomorrow!' );\r\n        this.blogsQuantum = blogs.filter((x) => x.cat3 == 'Quantum Data');\r\n  }\r\n\r\n  viewBlog(id) {\r\n    this.router.navigate(\r\n      ['/blog', id]\r\n      // , { maybe put in query params...   }\r\n    );\r\n  }\r\n\r\n  viewAllBlogs(cat) {\r\n    this.router.navigate(['/blogs', cat]);\r\n  }\r\n\r\n  openBlogModal(id) {\r\n    console.log('newModal id: ' + id);\r\n    // this.sendValue = id;\r\n    // const dialogRef =\r\n    this.dialog.open(BlogModalComponent, {\r\n      width: '80%',\r\n      maxWidth: '600px',\r\n      backdropClass: 'custom-dialog-backdrop-class',\r\n      panelClass: 'custom-dialog-panel-class',\r\n      data: { idValue: id }, // this.sendValue }\r\n    });\r\n    // dialogRef.afterClosed().subscribe(result => {\r\n    //   console.log('Blog Modal closed', result);\r\n    //   this.dialogValue = result.data;\r\n    // });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.blogsSubscription) {\r\n      this.blogsSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n"," \r\n<h2><span class=\"daily-tech monoton text-box\">OUR DAILY TECH</span></h2>\r\n<hr class=\"bar-white\" />\r\n \r\n<mat-tab-group  mat-align-tabs=\"center\">\r\n  <mat-tab color=\"primary\" label=\"All Categories\">\r\n    <div class=\"temp\">\r\n      <mat-spinner *ngIf=\"blogsLoading\" class=\"centerSpinner\"></mat-spinner>\r\n      <ul *ngFor=\"let blog of blogs\" class=\"view-blog\">\r\n        <mat-card (click)=\"openBlogModal(blog.id)\">\r\n          <li>\r\n            <span [innerHTML]=\"blog.cat3 | safeHtml\" class=\"category\"></span>\r\n            <button\r\n              class=\"btnModal btnCat\"\r\n              mat-stroked-button\r\n              (click)=\"viewAllBlogs(0)\"\r\n            >\r\n             View All\r\n            </button>\r\n            <!-- <button\r\n              class=\"btnModal\"\r\n              mat-stroked-button\r\n              (click)=\"openBlogModal(blog.id)\"\r\n            >\r\n              Reader\r\n            </button> -->\r\n\r\n            <!-- <button\r\n              class=\"btnModal\"\r\n              mat-stroked-button\r\n              (click)=\"viewBlog(blog.id)\"\r\n            >\r\n              Print\r\n            </button> -->\r\n            <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n          </li>\r\n          <h6 [innerHTML]=\"blog.title | safeHtml\"></h6>\r\n          <p class=\"blog-post\" [innerHTML]=\"blog.post | safeHtml\"></p>\r\n        </mat-card>\r\n      </ul>\r\n    </div>\r\n  </mat-tab>\r\n\r\n  <mat-tab color=\"primary\" label=\"Web Dev Affairs\" >\r\n    <div class=\"temp\">\r\n      <ul *ngFor=\"let blog of blogsWeb\" class=\"view-blog\">\r\n        <!-- <mat-card (click)=\"viewBlog(blog.id)\"> -->\r\n        <mat-card (click)=\"openBlogModal(blog.id)\">\r\n          <li>\r\n            <span [innerHTML]=\"blog.cat3 | safeHtml\" class=\"category\"></span>\r\n            <button\r\n              class=\"btnModal btnCat\"\r\n              mat-stroked-button\r\n              (click)=\"viewAllBlogs(blog.cat3)\"\r\n            >          View All\r\n          </button>\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"openBlogModal(blog.id)\"\r\n          >\r\n            Reader\r\n          </button> -->\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"viewBlog(blog.id)\"\r\n          >\r\n            Print\r\n          </button> -->\r\n          <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n        </li>\r\n        <h6 [innerHTML]=\"blog.title | safeHtml\"></h6>\r\n        <p class=\"blog-post\" [innerHTML]=\"blog.post | safeHtml\"></p>\r\n      </mat-card>\r\n      </ul>\r\n    </div>\r\n  </mat-tab>\r\n\r\n  <mat-tab color=\"primary\" label=\"Musing Blockchain\">\r\n    <div class=\"temp\">\r\n      <ul *ngFor=\"let blog of blogsBlockchain\" class=\"view-blog\">\r\n        <mat-card (click)=\"openBlogModal(blog.id)\">\r\n          <li>\r\n            <span [innerHTML]=\"blog.cat3 | safeHtml\" class=\"category\"></span>\r\n            <button\r\n              class=\"btnModal btnCat\"\r\n              mat-stroked-button\r\n              (click)=\"viewAllBlogs(blog.cat3)\"\r\n            >            View All\r\n          </button>\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"openBlogModal(blog.id)\"\r\n          >\r\n            Reader\r\n          </button> -->\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"viewBlog(blog.id)\"\r\n          >\r\n            Print\r\n          </button> -->\r\n          <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n        </li>\r\n        <h6 [innerHTML]=\"blog.title | safeHtml\"></h6>\r\n        <p class=\"blog-post\" [innerHTML]=\"blog.post | safeHtml\"></p>\r\n      </mat-card>\r\n      </ul>\r\n    </div>\r\n  </mat-tab>\r\n\r\n  <mat-tab color=\"primary\" label=\"A.I.Now.\">\r\n    <div class=\"temp\">\r\n      <ul *ngFor=\"let blog of blogsAI\" class=\"view-blog\">\r\n        <mat-card (click)=\"openBlogModal(blog.id)\">\r\n          <li>\r\n            <span [innerHTML]=\"blog.cat3 | safeHtml\" class=\"category\"></span>\r\n            <button\r\n              class=\"btnModal btnCat\"\r\n              mat-stroked-button\r\n              (click)=\"viewAllBlogs(blog.cat3)\"\r\n            >  View All\r\n          </button>\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"openBlogModal(blog.id)\"\r\n          >\r\n            Reader\r\n          </button> -->\r\n          <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"viewBlog(blog.id)\"\r\n          >\r\n            Print\r\n          </button>\r\n          <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n          <hr class=\"bar-title\" />\r\n          <br />\r\n        </li>\r\n        <h6 [innerHTML]=\"blog.title | safeHtml\"></h6>\r\n        <p class=\"blog-post\" [innerHTML]=\"blog.post | safeHtml\"></p>\r\n      </mat-card>\r\n      </ul>\r\n    </div>\r\n  </mat-tab>\r\n\r\n  <mat-tab color=\"primary\" label=\"Sociology Tomorrow!\">\r\n    <div class=\"temp\">\r\n      <ul *ngFor=\"let blog of blogsSoc\" class=\"view-blog\">\r\n        <mat-card (click)=\"openBlogModal(blog.id)\">\r\n          <li>\r\n            <span [innerHTML]=\"blog.cat3 | safeHtml\" class=\"category\"></span>\r\n            <button\r\n              class=\"btnModal btnCat\"\r\n              mat-stroked-button\r\n              (click)=\"viewAllBlogs(blog.cat3)\"\r\n            >  View All\r\n          </button>\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"openBlogModal(blog.id)\"\r\n          >\r\n            Reader\r\n          </button> -->\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"viewBlog(blog.id)\"\r\n          >\r\n            Print\r\n          </button> -->\r\n          <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n        </li>\r\n        <h6 [innerHTML]=\"blog.title | safeHtml\"></h6>\r\n        <p class=\"blog-post\" [innerHTML]=\"blog.post | safeHtml\"></p>\r\n      </mat-card>\r\n      </ul>\r\n    </div>\r\n  </mat-tab>\r\n  <mat-tab color=\"primary\" label=\"Quantum Data\">\r\n    <div class=\"temp\">\r\n      <ul *ngFor=\"let blog of blogsQuantum\" class=\"view-blog\">\r\n        <mat-card (click)=\"openBlogModal(blog.id)\">\r\n          <li>\r\n            <span [innerHTML]=\"blog.cat3 | safeHtml\" class=\"category\"></span>\r\n            <button\r\n              class=\"btnModal btnCat\"\r\n              mat-stroked-button\r\n              (click)=\"viewAllBlogs(blog.cat3)\"\r\n            >    View All\r\n          </button>\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"openBlogModal(blog.id)\"\r\n          >\r\n            Reader\r\n          </button> -->\r\n          <!-- <button\r\n            class=\"btnModal\"\r\n            mat-stroked-button\r\n            (click)=\"viewBlog(blog.id)\"\r\n          >\r\n            Print\r\n          </button> -->\r\n          <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n        </li>\r\n        <h6 [innerHTML]=\"blog.title | safeHtml\"></h6>\r\n        <p class=\"blog-post\" [innerHTML]=\"blog.post | safeHtml\"></p>\r\n      </mat-card>\r\n      </ul>\r\n    </div>\r\n  </mat-tab>\r\n\r\n  <!-- <mat-tab color=\"primary\" label=\"Quantum Data\">\r\n        <table mat-table class=\"mat-elevation-z8\" *ngFor=\"let blog of blogs\">\r\n\r\n            <ng-container matColumnDef=\"date\">\r\n                <th mat-header-cell *matHeaderCellDef> Date </th>\r\n                <td mat-cell *matCellDef=\"let blog\"> {{blog.date}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"cat3\">\r\n                <th mat-header-cell *matHeaderCellDef> Category </th>\r\n                <td mat-cell *matCellDef=\"let blog\">{{blog.cat3}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"title\">\r\n                <th mat-header-cell *matHeaderCellDef> Title </th>\r\n                <td mat-cell *matCellDef=\"let blog\">{{blog.title}} </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n    </mat-tab> -->\r\n</mat-tab-group>\r\n ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Post } from '../../models/Post';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { catchError, shareReplay } from 'rxjs/operators';\r\nimport { BehaviorSubject, throwError,  Observable, Subject } from 'rxjs'; //catchError, shareReplay  \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogsStore  {\r\n  private subjectBlogsUpdated = new BehaviorSubject<Post[]>([]);\r\n\r\n  blogsUpdated$: Observable<Post[]> = this.subjectBlogsUpdated.asObservable();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n    ) { }\r\n\r\n private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n private urlAWS: string = `${environment.nft_url}`;\r\n\r\n  protected urlDev2: string = 'https://emfm9dpoeh.execute-api.us-east-1.amazonaws.com/dev2';\r\n  protected urlDev: string = 'https://z3noflrq9b.execute-api.us-east-1.amazonaws.com/dev';\r\n \r\n  private blogs;\r\n  blogsUpdated = new Subject<any >();\r\n\r\n  \r\n  saveBlog(id: number, changes): Observable<any> {\r\n\r\n    if(id == -1) {\r\n     console.log(id); \r\n     changes.id = 99;\r\n     changes.username = 'admin';\r\n     changes.categoryId = 367;\r\n     console.log(changes);\r\n     console.log(changes.title);\r\n     console.log(changes.did);\r\n\r\n     return this.httpClient.post(`${this.urlAWS}/posts`, changes)\r\n         .pipe(\r\n             catchError(err => {\r\n                 return throwError(() => 'error in source. Details: ' + err);\r\n             }),\r\n             shareReplay()\r\n         ) \r\n\r\n    } else {\r\n     const posts = this.subjectBlogsUpdated.getValue();\r\n\r\n     const postIndex = posts.findIndex(post => +post.id == id); \r\n     const newPost: Post = {\r\n         ...posts[postIndex],\r\n         ...changes\r\n     };\r\n\r\n     const newPosts: Post[] = posts.slice(0);\r\n     newPosts[postIndex] = newPost;\r\n\r\n     this.subjectBlogsUpdated.next(newPosts);  \r\n     return this.httpClient.put(`${environment.nft_url}/posts `, changes)\r\n         .pipe(\r\n             catchError(err => { \r\n                 return throwError(() => 'error in source. Details: ' + err);\r\n             }),\r\n             shareReplay()\r\n  \r\n         ) \r\n    }\r\n }\r\n\r\n  getAllBlogs() {\r\n    //  let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    return this.httpClient.get<Post[]>(`${this.urlDev}/posts`  // ,\r\n    )\r\n  }\r\n\r\n  getBlog(id) {\r\n    //  let basicAuthHeaderString = this.zcreateBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    console.log(id)\r\n    return this.httpClient.get<Post>(`${this.urlDev2}/post/${id}`,\r\n      // {headers: header}\r\n    )\r\n  }\r\n\r\n  // getBlogsArray() {\r\n  //   console.log(this.blogs);\r\n  //   return [...this.blogs];\r\n  // }\r\n\r\n  hideBlog(blogName: string) {\r\n    this.blogs = this.blogs.filter(b => b !== blogName);\r\n    this.blogsUpdated.next({value: this.blogs});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\n \r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n \r\nexport type Post = { \r\n  id: number,\r\n  did?: string,\r\n  date?: string,\r\n  author?: string,\r\n  monthOrder?: string,\r\n  cat3?: string,\r\n  title: string,\r\n  post?: string,\r\n  blogcite?: string,\r\n  username?: string,\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n private urlAWS: string = `${environment.nft_url}/api/posts`;\r\n\r\n  protected urlDev2: string = 'https://emfm9dpoeh.execute-api.us-east-1.amazonaws.com/dev2';\r\n  protected urlDev: string = 'https://z3noflrq9b.execute-api.us-east-1.amazonaws.com/dev';\r\n\r\n  // private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n  blogsUpdated = new Subject();\r\n  private blogs;\r\n\r\n  getAllBlogs() {\r\n    //  let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    return this.http.get<Post[]>(`${this.urlDev}/posts`  // ,\r\n    )\r\n  }\r\n\r\n  getBlog(id) {\r\n    //  let basicAuthHeaderString = this.zcreateBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    console.log(id)\r\n    return this.http.get<Post>(`${this.urlDev2}/post/${id}`,\r\n      // {headers: header}\r\n    )\r\n  }\r\n\r\n  getCategories(): Observable<string[]> {\r\n    return this.http.get<string[]>(`${this.urlDev}/posts/cat3s`);\r\n  }\r\n\r\n  getBlogsByCategories(cat3s: string[]): Observable<any[]> {\r\n    return this.http.post<any[]>(`${this.urlDev}/posts/blogs`, { cat3s });\r\n  }\r\n  // getBlogsArray() {\r\n  //   console.log(this.blogs);\r\n  //   return [...this.blogs];\r\n  // }\r\n\r\n  hideBlog(blogName: string) {\r\n    this.blogs = this.blogs.filter(b => b !== blogName);\r\n    this.blogsUpdated.next({value: this.blogs});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { throwMatDialogContentAlreadyAttachedError } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\n// import { Subject } from 'rxjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { BlogsService } from '../blogs.service';\r\n\r\n@Component({\r\n  selector: 'app-blogs',\r\n  templateUrl: './blogs.component.html',\r\n  styleUrls: ['./blogs.component.scss'],\r\n})\r\nexport class BlogsComponent implements OnInit {\r\n  blogsSubscription: Subscription;\r\n  private cat: string;\r\n  blogs = [];\r\n  blogsByCat = [];\r\n  blogsLoading = true;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private blogsService: BlogsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getBlogs();\r\n  }\r\n\r\n  getBlogs() {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.cat = params.get('cat');\r\n      this.blogsSubscription = this.blogsService\r\n        .getAllBlogs()\r\n        .subscribe((response) => {\r\n          if (this.cat == '0') {\r\n            this.blogsByCat = response;\r\n            console.log('0', this.blogsByCat);\r\n          } else {\r\n            this.blogs = response;\r\n            this.blogsByCat = this.blogs.filter((x) => x.cat3 == this.cat);\r\n            console.log('other', this.blogsByCat);\r\n          }\r\n          this.blogsLoading = false;\r\n        });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.blogsSubscription) {\r\n      this.blogsSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<hr class=\"bar-white\" />\r\n<h2><span class=\"daily-tech monoton text-box\">OUR DAILY TECH</span></h2>\r\n<hr class=\"bar-white\" />\r\n<div class=\"temp\">\r\n\r\n  <div class=\"outer-div\">\r\n    <mat-spinner *ngIf=\"blogsLoading\" class=\"centerSpinner\"></mat-spinner>\r\n    <div class=\"inner-div\" *ngIf=\"blogsByCat\">\r\n      <ul *ngFor=\"let blog of blogsByCat\" class=\"view-blog\">\r\n        <li>\r\n          <span class=\"category\">{{ blog.cat3 }}</span>\r\n          <span class=\"date\" [innerHTML]=\"blog.date | safeHtml\"></span>\r\n          <h5 class=\"blog-title\" [innerHTML]=\"blog.title | safeHtml\"></h5>\r\n          <span class=\"posts\" [innerHTML]=\"blog.post | safeHtml\"></span>\r\n          <p [innerHTML]=\"blog.blogcite | safeHtml\"></p>\r\n        </li>\r\n        <hr class=\"bar-blogs\" />\r\n        <hr class=\"bar-blogs\" />\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  \r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chaindata',\r\n  templateUrl: './chaindata.component.html',\r\n  styleUrls: ['./chaindata.component.scss']\r\n})\r\nexport class ChaindataComponent implements OnInit {\r\n@Input() nftData: any;\r\n \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card> \r\n  <div class=\"row full\"> \r\n    <div class=\"col-4\"> \r\n     <!-- TODO: Total # of NFTS -->\r\n    </div>\r\n    <div class=\"col-8\">\r\n      <mat-spinner *ngIf=\"!nftData\"></mat-spinner>\r\n      <strong>0: </strong>{{ nftData.native | number: '.000' }} ETH<br>\r\n      <span *ngFor=\"let token of nftData.tokens;let i = index\">\r\n        <span> <strong>{{i+1}}:</strong></span> {{ token }} <br>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</mat-card>","import { Component, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\n \r\nimport { observable, Observable, Subject, Subscription, of } from 'rxjs';\r\nimport { NftsService } from '../nfts.service';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { Chain } from '../../../models/chain'; \r\n\r\n@Component({\r\n  selector: 'app-nft-add',\r\n  templateUrl: './nft-add.component.html',\r\n  styleUrls: ['./nft-add.component.scss']\r\n}) \r\nexport class NftAddComponent implements OnInit { \r\n  chains$!: Observable<Chain[]>;   \r\n  chain: string = 'eth'; // default chain\r\n  nftData: any;\r\n  tokens: any = [];\r\n  nfts: any \r\n  image: string = \"\";\r\n  name: string = \"\";\r\n  description: string = \"\"; \r\n  nftDataUpdated = new Subject<any>();\r\n  nftsUpdated = new Subject<any[]>();\r\n  key: string = ''; \r\n  nftAddress: string = \"\";  \r\n \r\n  // private nftSubscription: Subscription = new Subscription;\r\n  \r\n  constructor(\r\n    private nftsService: NftsService,\r\n    // private store: Store<fromChains.State>\r\n  ) {   \r\n    this.chains$ = of([\r\n      {id:\"1\",name:\"eth\",description:\"Ethereum Mainnet\",type:\"Mainnet\"},\r\n      {id:\"4\",name:\"rinkeby\",description:\"Ethereum Rinkeby\",type:\"Testnet\"},\r\n      {id:\"137\",name:\"polygon\",description:\"Polygon Mainnet\",type:\"Mainnet\"},\r\n      {id:\"80001\",name:\"mumbai\",description:\"Polygon Mumbai\",type:\"Testnet\"},\r\n      {id:\"56\",name:\"bsc\",description:\"BNB Mainnet\",type:\"Mainnet\"},\r\n      {id:\"97\",name:\"bsc testnet\",description:\"BNB Chain Testnet\",type:\"Testnet\"},     \r\n      {id:\"43114\",name:\"avalanche\",description:\"Avalanche C-Chain\",type:\"Mainnet\"}])\r\n     }\r\n  \r\n    ngOnInit(): void {\r\n      // this.chains$ = this.store.select(fromChains.getAvailableChains)\r\n    \r\n    }\r\n   \r\n    formReplaceNft(form: { valid: any; value: { chain: string, nftAddress: string; }; }) { \r\n      console.log(form.value.chain, form.value.nftAddress);\r\n      if(form.valid) {\r\n      this.nftsService.replacePostNfts(form.value.chain, form.value.nftAddress) \r\n        return this.nftData;\r\n      } \r\n    }\r\n\r\n \r\n  // onAddNft(form: { valid: any; value: { nftAddress: string; }; }) {\r\n  //   //this.nfts.push(this.name);\r\n  //   if(form.valid) {\r\n  //     this.nftsService.addNft(form.value.nftAddress);\r\n  //   }\r\n  // }\r\n  // onDeleteNft(nftAddress: string) {\r\n  //   this.nfts = this.nfts.filter((nft: string) => { return nft != nftAddress; });\r\n  //   // this.nfts = this.nftsService.deleteNft(nftName);\r\n  // }\r\n  // ngOnDestroy(): void {\r\n  //   this.nftSubscription.unsubscribe();\r\n  // }\r\n\r\n}\r\n","\r\n<section>\r\n  <form fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"formReplaceNft(f)\" #f=\"ngForm\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\" center center\">\r\n      <div fxLayout=\"column\" fxLayoutAlign=\" center center\" style=\"width:220px;\">\r\n    \r\n      <div class=\"row\"  fxFlex fxLayout=\"row\" fxAlign=\"flex-center\">\r\n        <div class=\"col col-6\">\r\n          <mat-form-field class=\"        \" > \r\n            <mat-label>Select Chain</mat-label>\r\n            <mat-select ngModel name=\"chain\" >\r\n              <mat-option *ngFor=\"let c of chains$ | async\" [value]=\"c.name\">{{c.name | uppercase}} | {{c.type}}</mat-option> \r\n            </mat-select> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col col-6\" id=\"button\">\r\n          <button mat-raised-button mat-icon-button color=\"accent\" type=\"submit\">\r\n            <mat-icon>add</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n        <mat-form-field style=\"min-width:375px\" appearance=\"outline\">\r\n          <mat-label>Ethereum Address</mat-label>\r\n          <input matInput type=\"text\" name=\"nftAddress\" ngModel placeholder=\"NFT\" minlength=\"42\" required />\r\n        </mat-form-field>\r\n\r\n      </div> \r\n    </div>\r\n   \r\n  </form>\r\n</section>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Chain } from 'src/app/models/chain';\r\n\r\nimport { NftsService } from '../nfts.service';\r\n\r\n@Component({\r\n  selector: 'app-nft',\r\n  templateUrl: './nft.component.html',\r\n  styleUrls: ['./nft.component.scss']\r\n})\r\n\r\nexport class NftComponent implements OnInit { \r\n  @Input('inputNft') nft: any;  \r\n  @Input() nftData: any;\r\n\r\n  @Input()\r\n  chains: Chain[];\r\n\r\n  @Output() nftDeleted = new EventEmitter();\r\n  viewNft() {} \r\n    constructor(private nftsService: NftsService) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.nft = this.nftsService.getNft(this.name);\r\n            }\r\n  onClicked() {\r\n    // this.nftDeleted.emit(this.name);\r\n    this.nftsService.deleteNft(this.nft.name);\r\n  } \r\n}\r\n"," \r\n <div *ngFor=\"let ch of chains\">\r\n  {{ch.name}}\r\n </div>\r\n<article class=\"nft\" (click)=\"onClicked()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center \" >  \r\n        <div  fxLayout=\"column\" fxLayoutAlign=\"center center\"  >\r\n            <mat-card>\r\n            <h5 class=\"child\">{{ nft.metadata.name}}</h5>      \r\n          <div fxLayoutAlign=\"center\">\r\n            <img src=\"{{nft.metadata.image}}\"  class=\"img-fluid\" alt=\"nft image\" /> \r\n          </div>\r\n            <h5 class=\"child\">{{ nft.name}}</h5>\r\n            <p class=\"child\"> {{ nft.metadata.description }} </p>\r\n            </mat-card>\r\n        </div>  \r\n    </div> \r\n</article>\r\n","\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { NftsService } from './nfts.service';\r\n\r\nimport { Chain } from '../../models/chain';\r\nimport { Store } from 'src/app/utility/store.service';\r\n@Component({\r\n  selector: 'app-nfts',\r\n  templateUrl: './nfts.component.html',\r\n  styleUrls: ['./nfts.component.scss']\r\n\r\n})\r\n\r\nexport class NftsComponent implements OnInit, OnDestroy {\r\n\r\n  chain: string = 'eth'; // default chain\r\n  // chains$!: Observable<Chain[]>;\r\n\r\n  nfts: any;\r\n  nftData: any;\r\n  tokens: any = [];\r\n\r\n  chainDataUpdated = new Subject<any[]>();\r\n  private nftDataSubscription: Subscription = new Subscription;\r\n\r\n  nftsUpdated = new Subject<any[]>();\r\n  private nftSubscription: Subscription = new Subscription;\r\n\r\n  constructor(\r\n    private nftsService: NftsService,\r\n    private store: Store\r\n  ) {\r\n    this.nfts = this.loadNfts();\r\n    this.nftData = this.showChainData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //  this.chains$ = this.store.selectAllChains();\r\n    //  console.log(\"init\",this.chains$)\r\n \r\n    this.nftDataSubscription = this.nftsService.chainDataUpdated.subscribe(() => {\r\n     this.nftData = this.nftsService.getChainData();\r\n    }\r\n    );\r\n\r\n    this.nftSubscription = this.nftsService.nftsUpdated.subscribe(() => {\r\n      this.nfts = this.nftsService.collectNfts();\r\n    });\r\n\r\n  }\r\n  showChainData() {\r\n    return this.nftData;\r\n    console.log(\"chain\", this.nftData);\r\n  }\r\n  // loadChains(): Observable<Chain[]> {\r\n  //   this.chains$ = this.store.selectAllChains();\r\n  //   console.log(\"loadchains\")\r\n  //   return this.chains$\r\n  // }\r\n  loadNfts() {\r\n    this.nfts = this.nftsService.collectNfts()\r\n      .subscribe((data: any) => {\r\n        if (data != undefined) {\r\n          this.nftData = data;\r\n          console.log(\"this.nftData\")\r\n          console.log(this.nftData);\r\n\r\n          this.tokens = data.tokens;\r\n\r\n          this.nfts = data.nfts;\r\n          console.log(this.nfts);\r\n          console.log(this.nfts[0]);\r\n          this.nftsUpdated.next([...this.nfts]);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.nftSubscription.unsubscribe();\r\n    this.nftDataSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"nfts\">\r\n  <section>\r\n    <!--   input: chain + address -->\r\n    <app-nft-add>\r\n    </app-nft-add>\r\n  </section>\r\n\r\n  <section>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"nftData\">\r\n      <app-chaindata [nftData]=\"nftData\"></app-chaindata>\r\n    </div>\r\n  </section>\r\n\r\n  <section>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1px\" *ngIf=\"nfts\">\r\n      <app-nft *ngFor=\"let nft of nftData.nfts\" [inputNft]=\"nft\" [nftData]=\"nftData\"></app-nft>\r\n\r\n    </div>\r\n  </section>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { KeysService } from '../../service/keys.service';\r\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Observable, throwError } from \"rxjs\";\r\n// import Moralis from 'moralis'.default();\r\n// import { EvmChain } from '@moralisweb3/evm-utils'\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class NftsService {\r\n  nftDataUpdated: any;\r\n  collectChainData(): any {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  // chainEth = EvmChain.ETHEREUM;\r\n  // chainBsc= EvmChain.BSC;\r\n  // chainPolygon = EvmChain.POLYGON;\r\n  // chainAvalance  = EvmChain.AVALANCHE;\r\n  // chainMumbai = EvmChain.MUMBAI; \r\n  // chainGoerli = EvmChain.GOERLI;\r\n\r\n  chain: string = 'eth';\r\n  nftData: any;\r\n  tokens: any = [];\r\n  nfts: any = [];\r\n  nftsUpdated = new Subject<any[]>();\r\n  chainDataUpdated = new Subject<any>();\r\n\r\n  key: string = '';\r\n  constructor(\r\n    private http: HttpClient,\r\n    private keyService: KeysService\r\n  ) {\r\n    this.key = this.keyService.getMoralisKey();\r\n\r\n  }\r\n\r\n  collectNfts(): Observable<any> {\r\n    return this.http.get(`${environment.nft_url}/nft`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n\r\n  }\r\n\r\n  replaceNfts(chain: string, address: string) {\r\n    if (!chain) {\r\n      chain = this.chain;\r\n    }\r\n    this.http.get(`${environment.nft_url}/nft/${chain}/${address}`)\r\n    .pipe(\r\n      catchError(err => {\r\n        throw 'error in source. Details: ' + err;\r\n      }))\r\n      .subscribe((data: any) => {\r\n        this.nftData = data;\r\n        console.log(this.nftData);\r\n        this.chainDataUpdated.next(this.nftData);\r\n      });\r\n    return this.nftData;\r\n\r\n  }\r\n  replacePostNfts(chain: string, address: string) {\r\n    if (!chain) {\r\n      chain = this.chain;\r\n    }\r\n    this.http.post(`${environment.nft_url}/nft`, { chain: chain, address: address },\r\n      {\r\n        headers: new HttpHeaders({\r\n          Accept: 'application/json'\r\n        })\r\n      })\r\n      .pipe(\r\n        catchError(err => {\r\n          throw 'error in source. Details: ' + err;\r\n        }))\r\n      .subscribe((data: any) => {\r\n        this.nftData = data;\r\n        console.log(this.nftData);\r\n        this.chainDataUpdated.next(this.nftData);\r\n      })\r\n      return this.nftData;\r\n  }\r\n  getChainData() {\r\n    console.log(\"chain\", this.nftData);\r\n    return this.nftData;\r\n  }\r\n  getTokens() {\r\n    return [...this.tokens];\r\n  }\r\n\r\n  deleteNft(nftName: string) {\r\n    this.nfts = this.nfts.filter((nft: string) => {\r\n      return nft !== nftName;\r\n    });\r\n    this.nftsUpdated.next(this.nfts);\r\n  }\r\n  private handleError(error: HttpErrorResponse): Observable<never> {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\r\n      );\r\n    }\r\n    // returns an observable with a user-facing error message\r\n    return throwError(() => new Error('Something bad happened; please try again later.'));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-starwars',\r\n  templateUrl: './starwars.component.html',\r\n  styleUrls: ['./starwars.component.css']\r\n})\r\nexport class StarwarsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>starwars works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NftsComponent } from '../crypto/nfts.component';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nft></app-nft>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styles: [\r\n    `\r\n    p {\r\n      font-size:.9rem;\r\n      color:rgb(220, 220, 247);text-decoration:none;\r\n\r\n    }\r\n    a.footer-text {\r\n      color:rgb(220, 220, 247);text-decoration:none;\r\n    }\r\n    footer {\r\n      position:fixed;\r\n      bottom:0;\r\n      width:100%;\r\n      z-index:100;\r\n\r\n       padding: 20px 0px 20px;\r\n      color:rgb(220, 220, 247);\r\n      text-align:center;\r\n      line-height:2rem;\r\n    background-color: rgba(96, 79, 245, 0.592);\r\n    }\r\n    div.menu {\r\n\r\n    background-image: url(\"../../../assets/bluechipTile.jpg\");\r\n    }\r\n    i.fa {\r\n      color:white;\r\n    }\r\n\r\n\r\n  `\r\n\r\n  ]\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  dt = new Date;\r\n\r\n  copyright = `Copyright 2019, ${this.dt.getFullYear()} All Rights Reserved.      `;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"menu\">\r\n  <footer>\r\n  <p>        \r\n    <strong>&copy;</strong>\r\n    <a\r\n      class=\"footer-text\"\r\n      href=\"https://thomasmaestas.net\"\r\n      target=\"_blank\"\r\n      title=\"Contact Information: thomasmaestas.net/\"\r\n    >\r\n      thomasmaestas.net </a\r\n    >&nbsp;  &nbsp;\r\n\r\n    <a title=\"github\" href=\"https://github.com/thomasm1\" target=\"_blank\">\r\n      <i class=\"fa fa-github\"></i>\r\n    </a>&nbsp;  &nbsp;\r\n\r\n\r\n    <a title=\"twitter\" href=\"https://twitter.com/ThomasMaestas\" target=\"_blank\">\r\n      <i class=\"fa fa-twitter\"></i>\r\n    </a>&nbsp;   &nbsp;\r\n\r\n\r\n    <a\r\n      title=\"facebook\"\r\n      href=\"https://www.facebook.com/thomas.m.maestas\"\r\n      target=\"_blank\"\r\n    >\r\n      <i class=\"fa fa-facebook\"></i>\r\n    </a>&nbsp;   &nbsp;\r\n\r\n\r\n    <a\r\n      title=\"linkedin\"\r\n      href=\"https://linkedin.com/in/thomasmaestas\"\r\n      target=\"_blank\"\r\n    >\r\n      <i class=\"fa fa-linkedin\"></i>\r\n    </a>\r\n    &nbsp;  &nbsp;\r\n    <a  href=\"https://blog.ourdailytech.net\" target=\"_blank\" class=\"footer-text\" > dailytech 1.0&nbsp; &nbsp;  </a >\r\n  </p>\r\n  \r\n</footer>\r\n</div>\r\n","import { Component, OnInit, EventEmitter, Output, OnDestroy} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AdminAuthenticationService } from '../../service/auth/admin-authentication.service';\r\nimport { JwtAuthService } from '../../service/auth/jwt-auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../reducers/app.reducer';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit { //}, OnDestroy {\r\n  @Output() sidenavToggle = new EventEmitter<void>();\r\n  variable: string = '';\r\n\r\n  // isAdminLoggedIn: boolean = false;\r\n  // isAuth = false;\r\n  isAuth$: Observable<boolean>;\r\n  // authSubscription: Subscription;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public adminAuthService: AdminAuthenticationService,\r\n    private jwtAuthService: JwtAuthService,\r\n    private store: Store<fromRoot.State>\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.variable = this.route.snapshot.params['name'];\r\n    // this.isAdminLoggedIn = this.authService.isAdminLoggedIn();\r\n    // this.authSubscription = this.jwtAuthService.authChange.subscribe(authStatus => {\r\n    //   this.isAuth = authStatus;\r\n    //   return this.isAuth;\r\n    // })\r\n    this.isAuth$ = this.store.select(fromRoot.getIsAuth);\r\n\r\n  }\r\n\r\n  onToggleSidenav() {\r\n    this.sidenavToggle.emit();\r\n  }\r\n\r\n  onLogout() {\r\n    this.jwtAuthService.logout();\r\n    this.adminAuthService.logout();\r\n\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   this.authSubscription.unsubscribe();\r\n  // }\r\n}\r\n","<div class=\"menu\">\r\n  <mat-toolbar color=\"primary\">\r\n    <mat-toolbar class=\"logo-box\" routerLink=\"/\">\r\n      <img class=\"logo\" alt=\"DailyTech Logo\" src=\"assets/blueColorTriomphe.png\" />\r\n    </mat-toolbar>\r\n    <div fxHide.gt-xs>\r\n      <button mat-icon-button (click)=\"onToggleSidenav()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    </div>\r\n    \r\n    <div fxFlex fxLayout fxLayoutAlign=\"flex-end\" fxHide.xs id=\"menu-list\">\r\n      <mat-nav-list fxLayout fxLayoutGap=\"10px\" class=\"navigation-items\">\r\n\r\n        <a mat-list-item routerLink=\"/writing\" class=\"nav-link daily-tech monoton\" *ngIf=\"(isAuth$ | async ) || adminAuthService.isAdminLoggedIn()\"\r\n          >WRITE!</a\r\n        >\r\n        <a\r\n          mat-list-item\r\n          *ngIf=\"adminAuthService.isAdminLoggedIn()\"\r\n          routerLink=\"/admin/user\"\r\n          class=\"nav-link daily-tech monoton\"\r\n          >ADMIN CONSOLE</a\r\n        >\r\n \r\n        <a mat-list-item routerLink=\"\" class=\"nav-link daily-tech monoton\"\r\n          >BLOG</a\r\n        >      \r\n        <a mat-list-item routerLink=\"/stats\" \r\n        *ngIf=\"!adminAuthService.isAdminLoggedIn() && !(isAuth$ | async )\"\r\n        class=\"nav-link daily-tech monoton\"\r\n        >FILTER</a\r\n      >\r\n        <a mat-list-item routerLink=\"/news\" class=\"nav-link daily-tech monoton\"\r\n        >NEWS</a\r\n      >\r\n      <a mat-list-item routerLink=\"/nasa\" class=\"nav-link daily-tech monoton\"\r\n        >NASA</a\r\n      >\r\n        <a\r\n          mat-list-item\r\n          *ngIf=\"!adminAuthService.isAdminLoggedIn() && !(isAuth$ | async )\"\r\n          routerLink=\"/login\"\r\n          class=\"nav-link daily-tech monoton\"\r\n          >LOGIN</a\r\n        >\r\n        <a\r\n          mat-list-item\r\n          class=\"pointer\"\r\n          *ngIf=\"(isAuth$ | async ) || adminAuthService.isAdminLoggedIn()\"\r\n          (click)=\"onLogout(); adminAuthService.logout()\"\r\n          routerLink=\"/login\"\r\n          class=\"nav-link daily-tech monoton\"\r\n          >SIGN OUT</a\r\n        >\r\n      </mat-nav-list>\r\n    </div>\r\n  </mat-toolbar>\r\n</div>\r\n\r\n","import { Component, OnInit, EventEmitter , Output, OnDestroy} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AdminAuthenticationService } from '../../../service/auth/admin-authentication.service';\r\nimport { JwtAuthService } from '../../../service/auth/jwt-auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../../reducers/app.reducer';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sidenav-list',\r\n  templateUrl: './sidenav-list.component.html',\r\n  styleUrls: ['./sidenav-list.component.scss']\r\n})\r\nexport class SidenavListComponent implements OnInit { // }, OnDestroy {\r\n  @Output() closeSidenav = new EventEmitter<void>();\r\n\r\n  variable = '';\r\n  // isAdminLoggedIn: boolean = false;\r\n  // isAuth: boolean = false;\r\n  isAuth$: Observable<boolean>;\r\n  // authSubscription: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    public adminAuthService: AdminAuthenticationService,\r\n    private jwtAuthService: JwtAuthService,\r\n    private store: Store<fromRoot.State>) { }\r\n\r\n  ngOnInit() {\r\n    this.variable = this.route.snapshot.params['name'];\r\n    // this.isAdminLoggedIn = this.authService.isAdminLoggedIn();\r\n    // this.authSubscription = this.jwtAuthService.authChange.subscribe(authStatus => {\r\n    //   this.isAuth = authStatus;\r\n    // })\r\n    this.isAuth$ = this.store.select(fromRoot.getIsAuth);\r\n  }\r\n\r\n\r\n  onClose() {\r\n    this.closeSidenav.emit();\r\n  }\r\n\r\n  onLogout() {\r\n    this.onClose();\r\n    this.jwtAuthService.logout();\r\n    this.adminAuthService.logout();\r\n\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   if (this.authSubscription) {\r\n  //     this.authSubscription.unsubscribe();\r\n  //   }\r\n  // }\r\n}\r\n","<mat-nav-list>\r\n  <div class=\"logo-box\">\r\n    <a routerLink=\"/blogs\" (click)=\"onClose()\">\r\n      <img\r\n        class=\"logo\"\r\n        alt=\"DailyTech Logo\"\r\n        src=\"assets/blueColorTriomphe.png\"\r\n      />\r\n    </a>\r\n  </div>\r\n<hr>\r\n  <a\r\n    mat-list-item\r\n    routerLink=\"/writing\"\r\n    (click)=\"onClose()\"\r\n    *ngIf=\"(isAuth$ | async) || adminAuthService.isAdminLoggedIn()\"\r\n  >\r\n    <mat-icon>edit</mat-icon>\r\n    <span class=\"nav-caption daily-tech monoton\">Write!</span>\r\n  </a> \r\n  <a mat-list-item routerLink=\"\" (click)=\"onClose()\">\r\n    <mat-icon>book</mat-icon>\r\n    <span class=\"nav-caption daily-tech monoton\">Blog</span>\r\n  </a>\r\n\r\n  <a mat-list-item routerLink=\"/news\" (click)=\"onClose()\">\r\n    <mat-icon>import_contacts</mat-icon>\r\n    <span class=\"nav-caption daily-tech monoton\">NEWS</span>\r\n  </a>\r\n\r\n  <a mat-list-item routerLink=\"/nasa\" (click)=\"onClose()\">\r\n    <mat-icon>api</mat-icon>\r\n    <span class=\"nav-caption daily-tech monoton\">NASA</span>\r\n  </a>\r\n  <hr />\r\n  <a\r\n    mat-list-item\r\n    *ngIf=\"!(isAuth$ | async) && !adminAuthService.isAdminLoggedIn()\"\r\n    routerLink=\"/register\"\r\n    (click)=\"onClose()\"\r\n  >\r\n    <mat-icon>face</mat-icon>\r\n    <span class=\"nav-caption daily-tech monoton\">Register</span>\r\n  </a>\r\n\r\n  <a\r\n    mat-list-item\r\n    *ngIf=\"!(isAuth$ | async) && !adminAuthService.isAdminLoggedIn()\"\r\n    routerLink=\"/login\"\r\n    (click)=\"onClose()\"\r\n  >\r\n    <mat-icon>input</mat-icon>\r\n    <span class=\"nav-caption daily-tech monoton\">Login</span>\r\n  </a>\r\n\r\n  <a\r\n    mat-list-item\r\n    *ngIf=\"adminAuthService.isAdminLoggedIn()\"\r\n    routerLink=\"/admin/posts\"\r\n    (click)=\"onClose()\"\r\n  >\r\n    <mat-icon>computer</mat-icon>\r\n    <span class=\"nav-caption daily-tech monoton\">Admin Console</span>\r\n  </a>\r\n\r\n  <mat-list-item>\r\n    <button\r\n      mat-icon-button\r\n      *ngIf=\"(isAuth$ | async) || adminAuthService.isAdminLoggedIn()\"\r\n      (click)=\"onLogout(); adminAuthService.logout()\"\r\n      routerLink=\"/login\"\r\n    >\r\n      <mat-icon>eject</mat-icon>\r\n      <span class=\"nav-caption daily-tech monoton\">Logout</span>\r\n    </button>\r\n  </mat-list-item>\r\n</mat-nav-list>\r\n\r\n<hr>\r\n\r\n <div class=\"qr\"> \r\n  <app-qrcode></app-qrcode>   \r\n </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-title-bar',\r\n  template: `\r\n<hr>\r\n<h2> <span class=\"daily-tech monoton text-box\">OUR DAILY TECH</span> </h2>\r\n<hr>\r\n  `,\r\n  styleUrls: ['./title-bar.component.scss']\r\n})\r\nexport class TitleBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NasaService } from './nasa.service';\r\nimport { Nasa } from '../../models/nasa.model';\r\n\r\n@Component({\r\n  selector: 'app-nasa',\r\n  templateUrl: './nasa.component.html',\r\n  styleUrls: ['./nasa.component.scss'],\r\n})\r\nexport class NasaComponent implements OnInit {\r\n  nasaLoading: boolean = true;\r\n  nasaObjectLoading: boolean = true;\r\n  object:Nasa;\r\n  listNasa: Nasa[];\r\n\r\n  constructor(private nasa: NasaService) {}\r\n\r\n  ngOnInit() {\r\n    this.displayNasa();\r\n    this.getNasaStores();\r\n  }\r\n\r\n  displayNasa() {\r\n    this.object = this.nasa.getNasa();\r\n    console.log(\"displayed: \"+ this.object)\r\n    return this.object;\r\n  }\r\n\r\n  getNasaStores() {\r\n    this.nasa.getNasaStores().subscribe((response) => {\r\n      this.listNasa = response;\r\n      console.log(this.listNasa);\r\n      this.nasaLoading = false;\r\n    });\r\n    return this.listNasa;\r\n  }\r\n  storeNasa(): void {\r\n    console.log(\"stored: \"+ this.object.title)\r\n    this.nasa.storeNasa(this.object).subscribe(\r\n      (data:Nasa) => {\r\n        console.log(data);\r\n      },\r\n      (error:any) => console.log(error)\r\n    );\r\n  }\r\n  // if (this.object.copyright != \"\") {\r\n  //   document.getElementById(\"copyright\").innerHTML =\r\n  //     \"Image Credits: \" + this.object.copyright;\r\n  // } else {\r\n  //   document.getElementById(\"copyright\").innerHTML =\r\n  //     \"Image Credits: \" + \"Public Domain\";\r\n  // }\r\n\r\n  // if (this.object.media_type == \"video\") {\r\n  //   document.getElementById(\"apod_img_id\").style.display = \"none\";\r\n  //   document.getElementById(\"apod_vid_id\").setAttribute(\"src\", this.object.url);\r\n  // } else {\r\n  //   document.getElementById(\"apod_vid_id\").style.display = \"none\";\r\n  //   document.getElementById(\"apod_img_id\").setAttribute(\"src\", this.object.url);\r\n  // }\r\n  // document.getElementById(\"reqObject\").text = url;\r\n  // document.getElementById(\"returnObject\").innerHTML = JSON.stringify(\r\n  //   this.object,\r\n  //   null,\r\n  //   4\r\n  // );\r\n  // document.getElementById(\"apod_explaination\").innerHTML = this.object.explanation;\r\n  // document.getElementById(\"apod_title\").innerHTML = this.object.title;\r\n}\r\n","\r\n <hr class=\"bar-white\" />\r\n <h2><span class=\"daily-tech monoton text-box\">Twython NASA API</span></h2>\r\n <hr class=\"bar-white\"/>\r\n<div class=\"nasa\">\r\n  <div gdArea=\"menu\">\r\n    <button  mat-raised-button  (click)=\"displayNasa()\">Update Nasa API </button>\r\n  </div>\r\n  <div\r\n  gdAreas=\"header header | side content\"\r\n  gdColumns=\"350px calc(90vw - 350px)\"\r\n  gdGap=\"16px\"\r\n  gdAreas.lt-md=\"header | menu | content\"\r\n  gdRows.lt-md=\"auto auto auto auto\"\r\n  gdColumns.lt-md=\"90vw\"\r\n>\r\n<mat-spinner *ngIf=\"nasaLoading\" class=\"centerSpinner\"></mat-spinner>\r\n  <mat-card  *ngIf=\"object\">\r\n    <h6>{{ object.title }}</h6>\r\n    <!-- <p> {{ object | json }}</p> -->\r\n    <p id=\"date\"><strong>Date:</strong> {{ object.date }}</p>\r\n\r\n    <img [src]=\"object.url\" class=\"nasa-image\" />\r\n    <p id=\"apod_explaination\">\r\n      <strong>Summary:</strong> {{ object.explanation }}\r\n    </p>\r\n    <p id=\"copyright\">\r\n      <strong>{{ object.media_type }} Copyright:</strong> {{ object.copyright }}\r\n    </p>\r\n    <p class=\"nasa-url\" ><strong>URL:</strong><a target=\"_blank\" rel=\"noopener\" [href]=\"object.hdurl\"> {{ object.hdurl }}</a></p>\r\n  </mat-card>\r\n\r\n  <mat-card  *ngFor=\"let nasa of listNasa\">\r\n    <h6>{{ nasa.title }}</h6>\r\n    <!-- <p> {{ object | json }}</p> -->\r\n    <p id=\"date\"><strong>Date:</strong> {{ nasa.date }}</p>\r\n\r\n    <img [src]=\"nasa.url\" class=\"nasa-image\" />\r\n    <p id=\"apod_explaination\">\r\n      <strong>Summary:</strong> {{ nasa.explanation }}\r\n    </p>\r\n    <p id=\"copyright\" *ngIf=\"nasa.copyright != '' \">\r\n      <strong>{{ nasa.media_type }}  credit:  </strong><span >{{ nasa.copyright }}</span>\r\n      <span *ngIf=\"nasa.copyright ==''\">Public Domain</span>\r\n    </p>\r\n    <p id=\"copyright\" *ngIf=\"nasa.copyright==''\">\r\n      <strong>{{ nasa.media_type }} Copyright:</strong> {{ nasa.copyright }}\r\n    </p>\r\n    <p class=\"nasa-url\" ><strong>URL: </strong><a  target=\"_blank\" rel=\"noopener\" [href]=\"nasa.hdurl\">{{ nasa.hdurl }}</a></p>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n<button  mat-raised-button  (click)=\"storeNasa()\"><small>Store Nasa</small> </button>\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { KeysService } from 'src/app/service/keys.service';\r\nimport { Nasa } from '../../models/nasa.model';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n// import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NasaService {\r\n  nasaKey: string = '';\r\n  private newId: number;\r\n  private aws_url;\r\n  private json_url;\r\n  private listNasa: Nasa[] = [];\r\n  object;\r\n\r\n  constructor(private http: HttpClient, private keys: KeysService) {\r\n    this.json_url = environment.json_url; //local-server\r\n    this.aws_url = environment.aws_url; // AWS ENDPOINT\r\n\r\n    this.getNasaStores().subscribe(\r\n      (response) => {\r\n        this.listNasa = response;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getNasaKey() {\r\n    this.nasaKey = this.keys.getNasaApi();\r\n    return this.nasaKey;\r\n  }\r\n  getNasa() {\r\n    this.getNasaKey();\r\n    console.log(this.nasaKey);\r\n\r\n    this.http\r\n      .get(`https://api.nasa.gov/planetary/apod?api_key=${this.nasaKey}`)\r\n      .subscribe((response) => {\r\n        this.object = response;\r\n        console.log(\"getNasa: \"+ this.object);\r\n      });\r\n    return this.object;\r\n  }\r\n\r\n  getNasaStores(): Observable<Nasa[]> {\r\n    // return this.http.get<Nasa[]>(this.json_url)\r\n    return this.http.get<Nasa[]>(this.aws_url)\r\n\r\n    .pipe(\r\n      catchError(err => {\r\n        throw 'error in source. Details: ' + err;\r\n      })\r\n    );  \r\n  }\r\n\r\n  storeNasa(nasa: Nasa): Observable<Nasa>  {\r\n    this.newId = this.listNasa.length + 1;\r\n    console.log(\"id: \"+this.newId+\" title: \" +nasa.title);\r\n    nasa.id = this.newId;\r\n    console.log(nasa.id);\r\n    // return this.http.post<Nasa>(`${this.json_url}/${this.newId}`,\r\n      return this.http.post<Nasa>(`${this.aws_url}`, nasa\r\n    //   , {\r\n    //   headers: new HttpHeaders({\r\n    //     Accept: 'application/json',    // NO LONGER NEED WITH HTTP-INTERCEPTER ////////////\r\n    //   }),\r\n    // }\r\n    )\r\n    .pipe( \r\n      catchError(err => {\r\n      throw 'error in source. Details: ' + err;\r\n    }));\r\n  }\r\n\r\n  private handleError(errorResponse: HttpErrorResponse) {\r\n    if (errorResponse.error instanceof ErrorEvent) {\r\n      console.error('Client Side Error: ', errorResponse.error.message)\r\n    } else {\r\n      console.error('Server Side Error: ', errorResponse);\r\n    }\r\n    // return new ErrorObservable('Oops, there is a problem with the\r\n       throw 'Oops, there is a problem with the service ... IT is notified & working on it. Please try again later, thanks :-)'\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\n@Component({\r\n  selector: 'app-news-article-results',\r\n  templateUrl: './news-article-results.component.html',\r\n  styleUrls: ['./news-article-results.component.css']\r\n})\r\nexport class NewsArticleResultsComponent implements OnInit {\r\n  searchResults: any[] = [];\r\nconstructor(\r\n    private store: Store<any>\r\n  ) {\r\n    store.pipe(select('searchResults'))\r\n      .subscribe(searchResults => {\r\n        this.searchResults = searchResults;\r\n      })\r\n  }\r\nngOnInit() {\r\n  }\r\n}","<mat-card *ngFor='let s of searchResults'>\r\n    <mat-list role=\"list\">\r\n        <mat-list-item>\r\n            <mat-card-title>\r\n                {{s.headline.main}}\r\n            </mat-card-title>\r\n        </mat-list-item>\r\n    </mat-list>\r\n    <mat-card-subtitle>\r\n        <mat-list role=\"list\">\r\n            <mat-list-item>Date: {{s.pub_date | date: 'full' }}</mat-list-item>\r\n            <mat-list-item><a href='{{s.web_url}}'>Link</a></mat-list-item>\r\n            <mat-list-item *ngIf='s.byline.original'>{{s.byline.original}}</mat-list-item>\r\n        </mat-list>\r\n    </mat-card-subtitle>\r\n    <mat-card-content>\r\n        <div class=\"content\">\r\n            <p>{{s.lead_paragraph}}</p>\r\n            <p>{{s.snippet}}</p>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { SearchData } from '../../../models/SearchData';\r\nimport { NgForm } from '@angular/forms';\r\nimport { NewsService } from '../news.service';\r\nimport * as moment from 'moment';\r\nimport { Store } from '@ngrx/store';\r\nimport { SET_SEARCH_RESULT } from '../../../reducers/news-search.reducer';\r\n\r\n@Component({\r\n  selector: 'app-news-article-search',\r\n  templateUrl: './news-article-search.component.html',\r\n  styleUrls: ['./news-article-search.component.css']\r\n})\r\nexport class NewsArticleSearchComponent implements OnInit {\r\n  searchData: SearchData = <SearchData>{\r\n    sort: 'newest'\r\n  };\r\n  today: Date = new Date();\r\nconstructor(\r\n    private newsService: NewsService,\r\n    private store: Store<any>\r\n  ) {\r\n}\r\nngOnInit() {\r\n  }\r\nsearch(searchForm: NgForm) {\r\n    if (searchForm.invalid) {\r\n      return;\r\n    }\r\n    const data: any = {\r\n      begin_date: moment(this.searchData.begin_date).format('YYYYMMDD'),\r\n      end_date: moment(this.searchData.end_date).format('YYYYMMDD'),\r\n      q: this.searchData.q\r\n    }\r\n    this.newsService.search(data)\r\n      .subscribe(res => {\r\n        this.store.dispatch({ type: SET_SEARCH_RESULT, payload: (res as any).response.docs });\r\n      })\r\n  }\r\n}\r\n","<p>news-article-search works!</p>\r\n","import { Component, OnInit  } from '@angular/core';\r\nimport { NewsService } from '../news.service';\r\n\r\n@Component({\r\n  selector: 'app-news-page',\r\n  templateUrl: './news-page.component.html',\r\n  styleUrls: ['./news-page.component.scss']\r\n})\r\nexport class NewsPageComponent implements OnInit   {\r\n  \r\n  newsLoading : boolean = true;\r\n  sections: string[] = `arts, automobiles, books, business, fashion, food, health,\r\n    home, insider, magazine, movies, national, nyregion, obituaries,\r\n    opinion, politics, realestate, science, sports, sundayreview,\r\n    technology, theater, tmagazine, travel, upshot, world`\r\n      .replace(/ /g, '')\r\n      .split(',');\r\n  results: any[] = [];\r\n  selectedSection: string = 'technology';\r\nconstructor(\r\n    private newsService: NewsService\r\n  ) { }\r\nngOnInit() {\r\n    this.getArticles(); \r\n  }\r\ngetArticles() {\r\n    this.newsService.getArticles(this.selectedSection)\r\n      .subscribe(res => {\r\n        this.results = (res as any).results;\r\n        this.newsLoading = false;\r\n      })\r\n  }\r\n}\r\n","\r\n<hr class=\"bar-white\" />\r\n<h2><span class=\"daily-tech monoton text-box\">{{ selectedSection | pipeCapitalizeCategory }}</span></h2>\r\n<hr class=\"bar-white\"/>\r\n<div class=\"news\">\r\n  <div\r\n    gdAreas=\"header header | side content\"\r\n    gdColumns=\"150px calc(90vw - 150px)\"\r\n    gdGap=\"16px\"\r\n    gdAreas.lt-md=\"header | menu | content\"\r\n    gdRows.lt-md=\"auto auto auto auto\"\r\n    gdColumns.lt-md=\"90vw\"\r\n  >\r\n    <!-- <div gdArea=\"header\">\r\n        <div >\r\n            <h3>{{selectedSection | pipeCapitalizeCategory }}</h3>\r\n        </div>\r\n    </div> -->\r\n    <div gdArea=\"menu\">\r\n      <button mat-raised-button color=\"primary\" class=\"mat-elevation-z10\" [matMenuTriggerFor]=\"appMenu\">Sections</button>\r\n      <mat-menu #appMenu=\"matMenu\">\r\n        <button\r\n          mat-menu-item\r\n          *ngFor=\"let s of sections\"\r\n          (click)=\"selectedSection = s; getArticles()\"\r\n        >\r\n          {{ s | pipeCapitalizeCategory }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n    <div gdArea=\"side\">\r\n      <mat-list role=\"list\">\r\n        <mat-list-item role=\"listitem\" *ngFor=\"let s of sections\">\r\n          <a\r\n            class=\"sidebar-links\"\r\n            (click)=\"selectedSection = s; getArticles()\"\r\n            >{{ s | pipeCapitalizeCategory }}</a\r\n          >\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </div>\r\n    <div class=\"news-content\" *ngIf=\"results\" gdArea=\"content\">\r\n      <mat-spinner *ngIf=\"newsLoading\" class=\"centerSpinner\"></mat-spinner>\r\n      <mat-card *ngFor=\"let r of results\">\r\n        <mat-list role=\"list\">\r\n          <mat-list-item>\r\n            <mat-card-title>\r\n              {{ r.title }}\r\n            </mat-card-title>\r\n          </mat-list-item>\r\n        </mat-list>\r\n        <mat-card-subtitle>\r\n          <mat-list role=\"list\">\r\n            <mat-list-item\r\n              ><small>{{\r\n                r.published_date | date: \"full\"\r\n              }}</small></mat-list-item\r\n            >\r\n            <br />\r\n            <!-- <mat-list-item *ngIf='r.byline'><small>{{ r.byline }}</small></mat-list-item> -->\r\n          </mat-list>\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <mat-list id=\"abstract\" role=\"list\">\r\n            <mat-list-item>{{ r.abstract }}</mat-list-item>\r\n          </mat-list>\r\n          <a href=\"{{ r.url }}\" target=\"_blank\"\r\n            ><img\r\n              *ngIf=\"r.multimedia[r.multimedia.length - 1]?.url\"\r\n              [src]=\"r.multimedia[r.multimedia.length - 1]?.url\"\r\n              [alt]=\"r.multimedia[r.multimedia.length - 1]?.caption\"\r\n              class=\"image\"\r\n            />\r\n          </a>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { SET_NEWS_STATE } from '../../../reducers/news.reducer';\r\n\r\n@Component({\r\n  selector: 'app-news-tool-bar',\r\n  templateUrl: './news-tool-bar.component.html',\r\n  styleUrls: ['./news-tool-bar.component.css']\r\n})\r\nexport class NewsToolBarComponent implements OnInit {\r\n  menuOpen: boolean;\r\n\r\n  constructor( private store: Store<any> ) {\r\n    // SENDS state of the menu to rest of the app\r\n    store.pipe(select('menuState'))\r\n      .subscribe(menuOpen => {\r\n        this.menuOpen = menuOpen;\r\n      })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.store.dispatch({ type: SET_NEWS_STATE, payload: !this.menuOpen });\r\n  }\r\n\r\n}\r\n// this.store.dispatch({ type: SET_MENU_STATE, payload: !this.menuOpen });\r\n","<mat-toolbar>\r\n    <a (click)='toggleMenu()' class=\"menu-button\">\r\n        <i class=\"material-icons\">\r\n            menu\r\n        </i>\r\n    </a>\r\n    New York Times App\r\n</mat-toolbar>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { KeysService } from 'src/app/service/keys.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewsService {\r\n  nytKey: string = '';\r\n  apiUrlNYT: string = '';\r\n\r\n  constructor(private http: HttpClient, private keys: KeysService) {   }\r\n\r\n  getNytKey() {\r\n    this.nytKey = this.keys.getNytApi();\r\n    return this.nytKey;\r\n  }\r\n  search(data) {\r\n    this.getNytKey();\r\n\r\n    let params: HttpParams = new HttpParams();\r\n    params = params.set('api-key', '06voWGzUHt0AJNvF2CeIqGezsRBQTZd5'); // this.nytKey);\r\n\r\n    if (data.q !== undefined) {\r\n      params = params.set('q', data.q);\r\n    }\r\n    if (data.begin_date !== undefined) {\r\n      params = params.set('begin_date', data.begin_date);\r\n    }\r\n    if (data.end_date !== undefined) {\r\n      params = params.set('end_date', data.end_date);\r\n    }\r\n    if (data.sort !== undefined) {\r\n      params = params.set('sort', data.sort);\r\n    }\r\n    return this.http.get(\r\n      `${environment.apiUrlNYT}/search/v2/articlesearch.json`,\r\n      {\r\n        params,\r\n      }\r\n    );\r\n  }\r\n  getArticles(section: string = 'technology') {\r\n\r\n\r\n    let params: HttpParams = new HttpParams();\r\n    params = params.set('api-key', '06voWGzUHt0AJNvF2CeIqGezsRBQTZd5'); // this.nytKey);\r\n\r\n    return this.http.get(\r\n      `${environment.apiUrlNYT}/topstories/v2/${section}.json`,\r\n      { params }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogContent } from '@angular/material/dialog';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-post-cancel',\r\n    template: `<h1 mat-dialog-title>Are you sure?</h1>\r\n            <mat-dialog-content>\r\n              <p>You already got {{ passedData.progress }}% left of writing ...</p>\r\n            </mat-dialog-content>\r\n            <mat-dialog-actions>\r\n              <button mat-button [mat-dialog-close]=\"true\">Yes</button>\r\n              <button mat-button [mat-dialog-close]=\"false\">No</button>\r\n            </mat-dialog-actions>`,\r\n  styles: [\r\n    `\r\n    `\r\n  ]\r\n})\r\nexport class PostCancelComponent   {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) {}\r\n\r\n \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Post } from '../../models/Post';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostDataService {\r\n\r\n  baseUrl:string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    \r\n    this.baseUrl = environment.API_URL;\r\n\r\n   }\r\n\r\n  retrieveAllPosts(username) {\r\n    //  let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    return this.http.get<Post[]>(`${this.baseUrl}/dailytech/${username}/posts`,\r\n    // {headers: header}\r\n    )\r\n  }\r\n \r\n  retrievePost(username, id) {\r\n    //  let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    return this.http.get<Post>(`${this.baseUrl}/dailytech/${username}/posts/${id}`,\r\n    // {headers: header}\r\n    )\r\n  }\r\n\r\n  createPost(username, post) {\r\n    //  let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    return this.http.post(`${this.baseUrl}/dailytech/${username}/posts`, post,\r\n    // {headers: header}\r\n    )\r\n  }\r\n  \r\n  updatePost(username, id, post) {\r\n    //  let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // }\r\n    // )\r\n    return this.http.put(`${this.baseUrl}/dailytech/${username}/posts/${id}`, post,\r\n    // {headers: header}\r\n    )\r\n  }\r\n\r\n  deletePost(username, id) {\r\n    //  let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    return this.http.delete(`${this.baseUrl}/dailytech/${username}/posts/${id}`,\r\n    // {headers: header}\r\n    )\r\n  }\r\n\r\n  \r\n  // createBasicAuthenticationHttpHeader() {\r\n  //   let username = 'user'\r\n  //   let password = 'pass'\r\n  //   let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\r\n  //   return basicAuthHeaderString;\r\n  // }\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { PostDataService } from '../post-data.service';\r\nimport { Post } from '../../../models/Post';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PostCancelComponent } from '../post-cancel/post-cancel.component';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styles: [\r\n    `\r\n    .ng-invalid:not(form) {\r\n      border-left:3px solid red;\r\n    }\r\n    `\r\n  ]\r\n})\r\nexport class PostComponent implements OnInit {\r\n  @Output() writingExit = new EventEmitter();\r\n\r\n  progress = 0;\r\n  timer: any;\r\n\r\n  id: number;\r\n  username: string;\r\n  post: Post;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private postService: PostDataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.startOrResumeWriting();\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.post = new Post(this.id, '', '', '', '', '', '', '', '');\r\n\r\n    if (this.id != -1) {\r\n      this.username = sessionStorage.getItem('AuthenticatedUser');\r\n      this.postService.retrievePost(this.username, this.id).subscribe(\r\n        data => this.post = data\r\n      )\r\n    }\r\n  }\r\n  startOrResumeWriting() {\r\n    this.timer = setInterval(() => {\r\n      this.progress = this.progress + 5;\r\n      if (this.progress >= 1000) {\r\n        clearInterval(this.timer);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  savePost() {\r\n    if (this.id === -1) {\r\n      this.postService.createPost(this.username, this.post)\r\n        .subscribe(\r\n          data => {\r\n            console.log(data)\r\n            this.router.navigate(['admin/posts'])\r\n          }\r\n        )\r\n    } else {\r\n      this.postService.updatePost(this.username, this.id, this.post)\r\n        .subscribe(\r\n          data => {\r\n            console.log(data)\r\n            this.router.navigate(['admin/posts'])\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  postCancel() {\r\n    console.log(this.post);\r\n    clearInterval(this.timer);\r\n    const dialogRef = this.dialog.open(PostCancelComponent, {\r\n      data: {\r\n        progress: this.progress\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.writingExit.emit();\r\n      } else {\r\n        this.startOrResumeWriting();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <!-- <div class=\"alert alert-warning\" *ngIf=\"postForm.dirty && postForm.invalid\">Enter valid values</div> -->\r\n    <div class=\"alert alert-warning\" *ngIf=\"category.touched && category.invalid\">category required</div>\r\n    <div class=\"alert alert-warning\" *ngIf=\"title.touched && title.invalid\">  title required</div>\r\n     <div class=\"alert alert-warning\" *ngIf=\"blogpost.touched && blogpost.invalid\">  blogpost required</div>\r\n\r\n<form (ngSubmit)=\"!postForm.invalid && savePost()\" #postForm=\"ngForm\">\r\n    <fieldset class=\"form-group\">\r\n    <label>Category</label>\r\n    <input [(ngModel)]=\"post.cat3\" #category=\"ngModel\" type=\"text\" class=\"form-control\" name=\"category\" required=\"required\" >\r\n</fieldset>\r\n\r\n<fieldset class=\"form-group\">\r\n    <label>Title</label>\r\n    <input [(ngModel)]=\"post.title\" #title=\"ngModel\" type=\"text\"  class=\"form-control\" name=\"title\"  required=\"required\">\r\n</fieldset>\r\n\r\n<fieldset class=\"form-group\">\r\n    <label>Post</label>\r\n    <input [(ngModel)]=\"post.post\" #blogpost=\"ngModel\"  type=\"text\" class=\"form-control\" name=\"blogpost\" required=\"required\"  >\r\n</fieldset>\r\n\r\n<fieldset class=\"form-group\">\r\n    <label>Citation</label>\r\n    <input [(ngModel)]=\"post.blogcite\" #citation=\"ngModel\" type=\"text\" class=\"form-control\" name=\"citation\"  >\r\n</fieldset>\r\n<button type=\"submit\" class=\"btn btn-success\" >Save</button>\r\n<button  (click)=\"postCancel()\" class=\"btn btn-success\" >Cancel</button>\r\n</form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { PostDataService } from '../post-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { Post } from '../../../models/Post'\r\n\r\n\r\n@Component({\r\n  selector: 'app-posts-list',\r\n  templateUrl: './posts-list.component.html',\r\n  styleUrls: ['./posts-list.component.scss']\r\n})\r\nexport class PostsListComponent implements OnInit {\r\n  message: string;\r\n  username: string;\r\n  posts: Post[];\r\n\r\n  constructor(\r\n    private postService: PostDataService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.username = sessionStorage.getItem('AuthenticatedUser');\r\n    this.refreshPosts();\r\n  }\r\n\r\n  refreshPosts() {\r\n    this.postService.retrieveAllPosts(this.username).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.posts = response;\r\n      }\r\n    );\r\n  }\r\n\r\n addPost() { \r\n  this.router.navigate(['admin/post',-1])\r\n  }\r\n  \r\n updatePost(id) { \r\n  this.router.navigate(['admin/post',id]);\r\n  }\r\n\r\n  deletePost(id) { \r\n    this.postService.deletePost(this.username, id).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.message = `Deletion of post ${id} successful`;\r\n      }\r\n    )\r\n    this.refreshPosts();\r\n  }\r\n\r\n}\r\n// OLD\r\n// posts = [ \r\n  //  new Post(1,\"may-18-05-02\",\"May 2, 2018\",  \"by Thomas Maestas, MA\",  \"Musing Blockchain\",  \r\n  //  \"3rd Generation Blockchain: How fast can the blockchain operate? \\nPart I: Speed needs of the Financial Sector\",  \r\n  //  \"<p class=\\\"firstparagraph\\\">The most polished, cryptographically stable leader of  <i>third generation</i> blockchain technology is formally released this month, and anticipation is anything but calm. (Some background posts help contextualize this 2-part series on Hashgraph  technology and potential for capturing per-micro-second, real-time financial needs of the globalizing economy: <a href=\\\"#18-04-18\\\"> April 18</a> and <a href=\\\"#18-04-02\\\">April 2</a>.) The formal release is on May 9th, but this May 1st press release caught my attention as we see a glimpse of this technology on a public* ledger: \\n</p>\\n<p class=\\\"quote\\\"> CULedger and Hedera today announced a partnership whereby CULedger will use Hedera's hashgraph platform and public ledger to build a system for cross-border payments. CULedger has already been using the private ledger version of hashgraph, offered by Swirlds, for general purpose, permissioned ledger use.<sup>1</sup> </p>\\n<p>The big news is Hedera's \\\"public\\\" blockchain ledger service that moves closer to popular usage with it's unique <i>directed acyclic graphs</i>, whose speed increases with scale.  Until recently, Blockchain tech has been hamstrung in the domain of micro-transactions, so now that the barrier has been crossed, how many sectors of life will be enhanced? All. But not yet. Once 5G technology (100 times faster, 100 times the capacity of 4G) is rolled out, then we hit the big leagues.</p> \\n<p class=\\\"quote\\\">A group of U.S. credit unions looking to pool resources considered the Bitcoin and Ethereum blockchains to track their business, but wound up selecting something else entirely: hashgraph.</p>\\n<p class=\\\"quote\\\">Currently, cross-border payments are painful for all parties involved,\\\" said Rick Cranston, COO of CULedger. \\\"They take time, they're expensive, and there is limited visibility into the transaction. Hashgraph is fast and it provides visibility between the two parties at a significantly lower cost. It also eliminates concerns regarding fraud and default, since transactions are recorded immutably on the public ledger, and manual processes, since transactions are automated via smart contracts.<sup>1</sup></p>\\n<p> ...to be continued...</p> \\n\\n\", \r\n  //  \"<p class=\\\"cite\\\"><a href=\\\"https://www.prnewswire.com/news-releases/culedger-selects-hedera-hashgraph-to-build-global-ledger-for-cross-border-payments-300639874.html\\\" target=\\\"_blank\\\">https://www.prnewswire.com/news-releases/culedger-selects-hedera-hashgraph-to-build-global-ledger-for-cross-border-payments-300639874.html</a></p>\\n<p class=\\\"cite\\\"><a href=\\\"https://venturebeat.com/2018/03/13/hedera-hashgraph-and-mz-unveil-next-generation-blockchain-alternative/\\\" target=\\\"_blank\\\">https://venturebeat.com/2018/03/13/hedera-hashgraph-and-mz-unveil-next-generation-blockchain-alternative/</a></p>\\n\\n<p class=\\\"cite\\\"><a href=\\\"https://medium.com/hashgraph/ai-3-0-why-hashgraph-and-how-it-will-revolutionize-blockchain-and-ai-86a6ef715c9f\\\" target=\\\"_blank\\\">https://medium.com/hashgraph/ai-3-0-why-hashgraph-and-how-it-will-revolutionize-blockchain-and-ai-86a6ef715c9f</a></p>\"), \r\n  //   new Post( 2,'','','','','','',''),\r\n  //   new Post( 3,'','','','','','',''),\r\n  //   new Post( 4,'','','','','','',''),\r\n  // ];\r\n","\r\n<div class=\"alert alert-success\" *ngIf='message'>{{message}}</div>\r\n\r\n<div class=\"container\">\r\n    <table class=\"table\">\r\n<caption>Posts</caption>\r\n<thead>\r\n    <tr >\r\n        <th>Delete</th>\r\n        <th>ID</th>\r\n        <th>Date</th>\r\n        <th>Category</th>\r\n        <th>Title</th>  \r\n    </tr>\r\n</thead>\r\n<tr *ngFor=\"let post of posts  \">\r\n    <td><button mat-raised-button color=\"warning\" (click)=\"deletePost(post.id)\"><small>Delete</small></button></td>\r\n    <td><button mat-raised-button color=\"basic\" (click)=\"updatePost(post.id)\"><small>Edit</small></button></td>\r\n    <td>{{post.id}}</td>\r\n    <td>{{post.date}}</td>\r\n    <td>{{post.cat3}}</td>\r\n    <td>{{post.title}}</td> \r\n</tr>\r\n</table>\r\n<div class=\"row\">\r\n    <button mat-raised-button color=\"basic\" (click)=\"addPost()\" >Add</button>\r\n</div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AnimationComponent } from '../../util/animation/animation.component';\r\nimport { Subscription } from 'rxjs'; \r\nimport { PostDataService } from '../post-data.service';\r\n\r\n@Component({\r\n  selector: 'app-posts-viewer',\r\n  templateUrl: './posts-viewer.component.html',\r\n  styleUrls: ['./posts-viewer.component.scss']\r\n})\r\nexport class PostsViewerComponent implements OnInit, OnDestroy {\r\n\r\n  toState = 'state1';\r\n  username: string;\r\n  private postsSubscription: Subscription;\r\n  blogName = 'blog 1';\r\n  blogs = ['a','b','c'];\r\n  posts = [];\r\n\r\n  constructor(private postDataService: PostDataService) { }\r\n\r\n  ngOnInit() {\r\n     this.username = sessionStorage.getItem('AuthenticatedUser');\r\n    this.refreshPosts();\r\n\r\n    // this.blogs = this.postDataService.retrieveAllPosts();\r\n    // this.postsSubscription =\r\n    this.postDataService.retrieveAllPosts(this.username).subscribe((response) => {\r\n      console.log(response);\r\n      this.posts = response;\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    // this.postsSubscription.unsubscribe();\r\n  }\r\n\r\n  refreshPosts() {\r\n    this.postDataService.retrieveAllPosts(this.username).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.posts = response;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  changeState(state: any) {\r\n    this.toState = state;\r\n  }\r\n  onBlogClick(blogName: string) {\r\n    this.blogs = this.blogs.filter(b => b !== blogName);\r\n  }\r\n\r\n}\r\n","<div class=\"row parent\">\r\n\r\n    <div class=\"col post-btn\">\r\n        <button (click)=\"changeState('state2')\" class=\"btn btn-gray pull-left\">View</button><br />\r\n        <button (click)=\"changeState('state1')\" class=\"btn btn-gray pull-left\">Close</button>\r\n    </div>\r\n    <div class=\"col post\">\r\n        <table class=\"table\">\r\n            <caption>Posts</caption>\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Category</th>\r\n                    <th>Title</th>\r\n                </tr>\r\n            </thead>\r\n            <tr *ngFor=\"let post of posts  \">\r\n\r\n                <td>{{post.date}}</td>\r\n                <td>{{post.cat3}}</td>\r\n                <td>{{post.title}}</td>\r\n            </tr>\r\n        </table>\r\n        <app-blog (blogClicked)=\"onBlogClick(blog)\" *ngFor=\"let blog of blogs\" [blogName]=\"blog\"></app-blog>\r\n        <app-animation [currentState]=\"toState\"></app-animation>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AdminDataService } from '../../service/data/admin-data.service';\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  @Output() writingStart = new EventEmitter<void>();\r\n\r\n  name = '';\r\n  message = 'Welcome ' + this.name;\r\n  getPostFromService: string;\r\n  // cat3 = {\r\n  //   \"a\":\"b\"\r\n  // }\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private adminService: AdminDataService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.name = this.route.snapshot.params['name'];\r\n    this.getParameterUpdate();   // /DISABLED UNTIL BASIC AUTH ==> JWT\r\n\r\n  }\r\nonStartWriting() {\r\n      this.writingStart.emit();\r\n}\r\n\r\n  getParameterUpdate() {\r\n    // this.adminService.executeParameterService(this.name).subscribe(\r\n    //   response => this.handleResponse(response),\r\n    //   error => this.handleErrorResponse(error)      // /DISABLED UNTIL BASIC AUTH ==> JWT\r\n    // );\r\n    this.message = 'Welcome ' + this.name;\r\n  }\r\n  getUpdate() {\r\n    this.adminService.executeAdminService().subscribe(\r\n      response => this.handleResponse(response),\r\n      error => this.handleErrorResponse(error)\r\n    );\r\n    this.message = 'Welcome ' + this.name;\r\n  }\r\n  getErrorUpdate() {\r\n    this.adminService.errorService().subscribe(\r\n      response => this.handleResponse(response),\r\n      error => this.handleErrorResponse(error)\r\n    );\r\n    this.message = 'Welcome ' + this.name;\r\n  }\r\n\r\n  handleResponse(response) {\r\n    this.getPostFromService = response.post\r\n  }\r\n\r\n  handleErrorResponse(error) {\r\n    this.getPostFromService = error.error.message;\r\n  }\r\n}\r\n","<app-title-bar></app-title-bar>\r\n<mat-tab-group mat-align-tabs=\"center\">\r\n\r\n\r\n    <mat-tab label=\"My Console\">\r\n        <div class=\"temp\">\r\n            <div class=\"admin\">\r\n\r\n                <div class=\"row\">\r\n                    <!-- <div class=\"col post-btn\">\r\n                        <button (click)=\"getUpdate()\" class=\"btn btn-gray pull-left \">Update</button> <br />\r\n                        <button (click)=\"getErrorUpdate()\" class=\"btn btn-gray pull-left\">Errors</button>\r\n                    </div> -->\r\n                    <div class=\"col post\">\r\n                        <h6>{{message}}</h6>\r\n                        <h6 *ngIf=\"getPostFromService\">{{getPostFromService}}</h6>\r\n                    </div>\r\n                </div>\r\n                <section class=\"new-writing\" fxLayout fxLayoutAlign=\"center\">\r\n                    <mat-card fxFlex.xs=\"100%\" fxFlex=\"100%\">\r\n                        <mat-card-title fxLayoutAlign=\"center\">Time to Write!</mat-card-title>\r\n                        <mat-card-content fxLayoutAlign=\"center\">\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"Category\">\r\n                             <!--        <mat-option *ngFor=\"let cat of cat3\" [value]=\"cat.value\">\r\n                                      {{ cat.viewValue }}\r\n                                    </mat-option>\r\n                                    <mat-option value=\"Web\">\r\n                                        Web Dev Affairs\r\n                                    </mat-option>\r\n                                    <mat-option value=\"Blockchain\">\r\n                                        Musing Blockchain\r\n                                    </mat-option>\r\n                                    <mat-option value=\"A.I.\">\r\n                                        A.I.Now.\r\n                                    </mat-option>\r\n                                    <mat-option value=\"Sociology\">\r\n                                        Sociology Today\r\n\r\n                                    </mat-option>\r\n                                    <mat-option value=\"Quantum\">\r\n                                        Quantum Data\r\n\r\n                                    </mat-option> -->\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </mat-card-content>\r\n                        <mat-card-actions fxLayoutAlign=\"center\">\r\n                            <button type=\"submit\" mat-button (click)=\"onStartWriting()\">Start</button>\r\n                        </mat-card-actions>\r\n                    </mat-card>\r\n                </section>\r\n\r\n            </div>\r\n        </div>\r\n    </mat-tab>\r\n\r\n\r\n\r\n\r\n    <mat-tab label=\"My Blogs\">\r\n        <div class=\"temp\">\r\n\r\n            <app-posts-list></app-posts-list>\r\n\r\n        </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"My Drafts\">\r\n        <div class=\"temp\">\r\n\r\n            <app-posts-list></app-posts-list>\r\n\r\n\r\n        </div>\r\n    </mat-tab>\r\n\r\n\r\n\r\n</mat-tab-group>\r\n","import { Component, OnInit, OnDestroy  } from '@angular/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport {  NgForm } from '@angular/forms';\r\n\r\nimport { JwtAuthService } from '../../../service/auth/jwt-auth.service';\r\nimport { UiService } from '../../../service/ui.service';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../../reducers/app.reducer';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  maxDate;\r\n  // isLoading = false;\r\n  isLoading$ : Observable<boolean>; // $ at end of variable ngrx convention\r\n  private loadingSubs: Subscription;\r\n\r\n  constructor(\r\n    private jwtAuthService: JwtAuthService,\r\n    private uiService: UiService,\r\n    // private store: Store<{ ui: fromApp.State }>,\r\n    private store: Store< fromRoot.State > ) {\r\n  }\r\n\r\n  ngOnInit()  {\r\n    // this.loadingSubs = this.uiService.loadingStateChanged.subscribe(isLoading => {\r\n    //   this.isLoading = isLoading;\r\n    // });\r\n\r\n    // this.store.subscribe(data => console.log(data));Ver\r\n    // this.isLoading$ = this.store.pipe(map(state => state.ui.isLoading));\r\n    this.isLoading$ = this.store.select(fromRoot.getIsLoading);\r\n\r\n\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  };\r\n\r\n  onRegister(form:NgForm) {\r\n    console.log(form);\r\n\r\n    // USER REGISTER (SIDENAV --temporary)\r\n    this.jwtAuthService.registerUser({\r\n      username: form.value.username,\r\n      email: form.value.email,\r\n      password: form.value.password\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loadingSubs) {\r\n      this.loadingSubs.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","        <app-title-bar></app-title-bar>\r\n<div class=\"temp\">\r\n<h6>REGISTER</h6>\r\n      <section class=\"register-form\">\r\n        <form fxLayout=\"column\" (ngSubmit)=\"onRegister(f)\" fxLayoutAlign=\"center center\" #f=\"ngForm\">\r\n\r\n          <div class=\"welcome alert  \">\r\n          </div>\r\n          <!-- email (Used for User Auth) -->\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"email\" matInput placeholder=\"email\" ngModel name=\"email\" required\r\n              #emailInput=\"ngModel\">\r\n            <mat-error *ngIf=\"emailInput.hasError('required')\">Field must not be empty</mat-error>\r\n            <mat-error *ngIf=\"!emailInput.hasError('required')\">E-Mail is invalid</mat-error>\r\n          </mat-form-field>\r\n\r\n          <!-- username [Used for Admin Auth; And, used as username] -->\r\n          <mat-form-field  appearance=\"outline\">\r\n            <input type=\"text\" matInput placeholder=\"username\" ngModel name=\"username\" required\r\n              #usernameInput=\"ngModel\">\r\n            <mat-error *ngIf=\"usernameInput.hasError('required')\">Field must not be empty</mat-error>\r\n          </mat-form-field>\r\n\r\n          <!-- password (USERS) -->\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"password\" matInput placeholder=\"password\" ngModel name=\"password\" required minlength=\"6\"\r\n              #pwInput=\"ngModel\">\r\n            <mat-hint *ngIf=\"pwInput.value?.length<5\">Should be at least 6 characters long</mat-hint>\r\n            <mat-hint flexAlign=\"end\">{{ pwInput.value?.length }} / 6</mat-hint>\r\n            <mat-error *ngIf=\"pwInput.hasError('required')\">Field must not be empty</mat-error>\r\n          </mat-form-field>\r\n          <hr>\r\n\r\n          <div class=\"row\">\r\n            <button  *ngIf=\"!(isLoading$ | async)\"  type=\"submit\" mat-raised-button color=\"primary\">REGISTER</button> &nbsp;\r\n            <button  *ngIf=\"!(isLoading$ | async)\" mat-raised-button routerLink=\"/login\" color=\"basic\">CANCEL</button>\r\n            <mat-spinner *ngIf=\"isLoading$ | async\"></mat-spinner>\r\n          </div>\r\n<hr>\r\n        </form>\r\n      </section>\r\n    </div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {  FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AdminAuthenticationService } from '../../../service/auth/admin-authentication.service';\r\nimport { JwtAuthService } from '../../../service/auth/jwt-auth.service';\r\nimport { UiService } from 'src/app/service/ui.service';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../../reducers/app.reducer';\r\n\r\n@Component({\r\n  selector: 'app-signon',\r\n  templateUrl: './signon.component.html',\r\n  styleUrls: ['./signon.component.scss']\r\n})\r\nexport class SignonComponent implements OnInit { //, OnDestroy {\r\n  maxDate;\r\n\r\n  loginForm: FormGroup;\r\n  username = '';\r\n  password = '';\r\n  errorMessage = 'Invalid Credentials';\r\n  invalidLogin = false;\r\n  authLogin = false;\r\n\r\n  adminFlag: boolean = false\r\n  // isLoading = false;\r\n  isLoading$ : Observable<boolean>; // $ at end of variable ngrx convention\r\n  private loadingSubs: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private adminAuthService: AdminAuthenticationService,\r\n    private jwtAuthService: JwtAuthService,\r\n    private uiService: UiService,\r\n    // private store: Store<{ ui: fromApp.State }>,\r\n    private store: Store< fromRoot.State >\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.loadingSubs = this.uiService.loadingStateChanged.subscribe(isLoading => {\r\n    //   this.isLoading = isLoading;\r\n    // });\r\n\r\n    // this.store.subscribe(data => console.log(data));Ver\r\n    // this.isLoading$ = this.store.pipe(map(state => state.ui.isLoading));\r\n    this.isLoading$ = this.store.select(fromRoot.getIsLoading);\r\n\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', {\r\n        validators: [Validators.required, Validators.email]\r\n\r\n      }),\r\n      password: new FormControl('', {\r\n        validators: [Validators.required] })\r\n    });\r\n  }\r\n   // USER AUTHENTICATION\r\n   handleJwtLogin( ){\r\n    console.log(this.loginForm);\r\n\r\n    this.jwtAuthService.login({\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password\r\n    });\r\n\r\n  }\r\n\r\n    // USER REGISTER (TABS)\r\n  onRegister(form:NgForm) {\r\n    console.log(form);\r\n\r\n    // USER REGISTER (SIDENAV --temporary)\r\n    this.jwtAuthService.registerUser({\r\n      username: form.value.username,\r\n      email: form.value.email,\r\n      password: form.value.password\r\n    });\r\n  }\r\n\r\n\r\n    // ADMIN AUTHENTICATION ////////////////////////\r\n\r\n  adminOpen() {\r\n    this.adminFlag = (this.adminFlag===true)?false:true;\r\n  }\r\n\r\n  handleAdminAuthLogin(form:NgForm) {\r\n    console.log(form);\r\n\r\n    // this.adminAuthService.executeAuthenticationService(form.value.username, form.value.password)\r\n      this.adminAuthService.executeAuthJwtService(form.value.username, form.value.password)\r\n    .subscribe(\r\n        data => {\r\n          console.log(data)\r\n          this.router.navigate(['admin', form.value.username])\r\n          this.invalidLogin = false\r\n          this.authLogin = true\r\n        },\r\n        error => {\r\n          console.log(error)\r\n          this.invalidLogin = true\r\n          this.authLogin = false\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  // ngOnDestroy() {\r\n  //   if (this.loadingSubs) {\r\n  //     this.loadingSubs.unsubscribe();\r\n  //   }\r\n  // }\r\n\r\n}\r\n","<hr>\r\n   <h2> <span class=\"daily-tech monoton text-box\">OUR DAILY TECH</span> </h2>\r\n<hr>\r\n<mat-tab-group mat-align-tabs=\"center\">\r\n\r\n  <mat-tab label=\"SIGN ON\">\r\n    <mat-card class=\"temp\">\r\n\r\n      <section class=\"signup-form\">\r\n  <!-- <form fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"handleJwtLogin(f)\" #f=\"ngForm\"> -->\r\n    <form *ngIf=\"!adminFlag\" fxLayout=\"column\" fxLayoutAlign=\"center center\"  [formGroup]=\"loginForm\" (ngSubmit)=\"handleJwtLogin()\" >\r\n\r\n      <mat-card-title>Login</mat-card-title>\r\n          <!---->\r\n    \r\n        <mat-form-field appearance=\"outline\">\r\n          <!-- <input type=\"email\" matInput placeholder=\"Email\" ngModel name=\"email\" #email /> -->\r\n          <input type=\"email\" matInput placeholder=\"Email\" class=\"form-control\"\r\n           name=\"email\" color=\"primary\" formControlName=\"email\" />\r\n        </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"outline\">\r\n             <!-- <input type=\"password\" matInput placeholder=\"Password: pass\" ngModel name=\"password\" #password /> -->\r\n             <input type=\"password\" matInput placeholder=\"Password\" class=\"form-control\"\r\n            name=\"password\" formControlName=\"password\" />\r\n           </mat-form-field>\r\n      \r\n        <mat-card-actions>\r\n          <div class=\"row\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\">LOGIN</button> &nbsp;\r\n            <button mat-raised-button color=\"basic\">CANCEL</button>\r\n          </div>\r\n        </mat-card-actions>\r\n        </form>\r\n\r\n\r\n          <!--ADMIN-->\r\n\r\n          <h6  class=\"admin-flag\" ><a *ngIf=\"!adminFlag\" class=\"admin-flag\" (click)=\"adminOpen()\">  <hr>\r\n            ADMIN LOGIN</a></h6>\r\n\r\n          <form *ngIf=\"adminFlag\"  fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"handleAdminAuthLogin(fAdmin)\" #fAdmin=\"ngForm\">\r\n\r\n            <h6>ADMIN LOGIN</h6>\r\n          <mat-form-field appearance=\"outline\" >\r\n            <input type=\"text\" matInput placeholder=\"Administration\" ngModel name=\"username\" #username />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"outline\" >\r\n            <input type=\"password\" matInput placeholder=\"Password\" ngModel name=\"password\" #password />\r\n          </mat-form-field>\r\n\r\n\r\n          <div class=\"row\">\r\n            <button  *ngIf=\"!(isLoading$ | async)\"  type=\"submit\" mat-raised-button color=\"primary\">SIGN ON</button> &nbsp;\r\n            <button  *ngIf=\"!(isLoading$ | async)\" mat-raised-button color=\"basic\">CANCEL</button>\r\n            <mat-spinner *ngIf=\"isLoading$ | async\"></mat-spinner>\r\n          </div>\r\n        </form>\r\n\r\n        <h6  ><a *ngIf=\"adminFlag\" class=\"admin-flag\" (click)=\"adminOpen()\">       <hr>\r\n          USER LOGIN</a></h6>\r\n      </section>\r\n    </mat-card>\r\n  </mat-tab>\r\n\r\n  <!--REGISTER REGISTER REGISTER REGISTER REGISTER REGISTER-->\r\n  <mat-tab label=\"REGISTER\">\r\n    <div class=\"temp\">\r\n\r\n      <section class=\"register-form\">\r\n        <form fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"onRegister(f)\" #f=\"ngForm\">\r\n          <h6>REGISTER</h6>\r\n          <!-- email (Used for User Auth) -->\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"email\" matInput placeholder=\"email\" ngModel name=\"email\" required\r\n              #emailInput=\"ngModel\">\r\n            <mat-error *ngIf=\"emailInput.hasError('required')\">Field must not be empty</mat-error>\r\n            <mat-error *ngIf=\"!emailInput.hasError('required')\">E-Mail is invalid</mat-error>\r\n          </mat-form-field>\r\n<br />\r\n          <!-- username [Used for Admin Auth; And, used as username] -->\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"text\" matInput placeholder=\"username\" ngModel name=\"username\" required\r\n              #usernameInput=\"ngModel\">\r\n            <mat-error *ngIf=\"usernameInput.hasError('required')\">Field must not be empty</mat-error>\r\n          </mat-form-field>\r\n          <br />\r\n          <mat-form-field appearance=\"outline\">\r\n            <input type=\"password\" matInput placeholder=\"password\" ngModel name=\"password\" required minlength=\"6\"\r\n              #pwInput=\"ngModel\">\r\n            <mat-hint *ngIf=\"pwInput.value?.length<5\"><small>Should be at least 6 characters long</small></mat-hint>\r\n            <mat-hint flexAlign=\"end\">{{ pwInput.value?.length }} / 6</mat-hint>\r\n            <mat-error *ngIf=\"pwInput.hasError('required')\">Field must not be empty</mat-error>\r\n          </mat-form-field>\r\n          <hr>\r\n          <br />\r\n          <div class=\"row\">\r\n            <button  *ngIf=\"!(isLoading$ | async)\"  type=\"submit\" mat-raised-button color=\"primary\">REGISTER</button> &nbsp;\r\n            <button  *ngIf=\"!(isLoading$ | async)\" mat-raised-button routerLink=\"/login\" color=\"basic\">CANCEL</button>\r\n            <mat-spinner *ngIf=\"isLoading$ | async\"></mat-spinner>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { trigger, state, style, animate, transition } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-animation',\r\n  templateUrl: './animation.component.html',\r\n  styleUrls: ['./animation.component.scss'],\r\n  animations: [\r\n    trigger('changeState', [\r\n      state('state1', style({\r\n        backgroundColor:'lightblue',\r\n        transform: 'scale(1)'\r\n      })),\r\n      state('state2', style({\r\n      backgroundColor:'red',\r\n        transform: 'scale(1.5)'  \r\n      })),\r\n      transition('*=>state1', animate('300ms')),\r\n      transition('*=>state2', animate('100ms')),\r\n      \r\n    ])\r\n  ]\r\n})\r\nexport class AnimationComponent implements OnInit {\r\n\r\n  @Input() currentState;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [@changeState]=\"currentState\" class=\"newBlock mx-auto\"></div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store } from '@ngrx/store';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { StopWritingComponent } from './stop-writing.component';\r\nimport { WritingService } from '../writing.service';\r\nimport * as fromWriting from '../../../reducers/writing.reducer';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-current-writing',\r\n  templateUrl: './current-writing.component.html',\r\n  styleUrls: ['./current-writing.component.scss']\r\n})\r\nexport class CurrentWritingComponent implements OnInit {\r\n  \r\n  progress = 0;\r\n  timer: any;\r\n  news: string[];\r\n  writingForm: FormGroup;\r\n  \r\n  constructor(\r\n    private writingService: WritingService,\r\n    private dialog: MatDialog,\r\n    private store: Store<fromWriting.State>,\r\n    private fb: FormBuilder\r\n  ) { }\r\n  \r\n  ngOnInit() {\r\n    this.startOrResumeWriting();\r\n    this.initForm();\r\n    \r\n  }\r\n  \r\n    private initForm() {\r\n      this.writingForm = this.fb.group({\r\n        title: ['', Validators.required],\r\n        content: ['', Validators.required]\r\n      });\r\n    }\r\n    \r\n  \r\n  startOrResumeWriting() {\r\n    this.store.select(fromWriting.getActiveWriting).pipe(take(1)).subscribe(writingMod => {\r\n      // this.news = this.writingService.getWritingExercise().news;\r\n      this.news = writingMod.news;\r\n      // const step = this.writingService.getWritingExercise().durationGoal / 100 * 1000;\r\n      const step = writingMod.durationGoal /100 * 1000;\r\n      this.timer = setInterval(() => {\r\n        this.progress = this.progress + 1;\r\n        if (this.progress >= 100) {\r\n          this.writingService.completeWriting();\r\n          clearInterval(this.timer);\r\n        }\r\n      }, step); // 1000);\r\n    })\r\n  }\r\n\r\n  postCancel() {\r\n    clearInterval(this.timer);\r\n    const dialogRef = this.dialog.open(StopWritingComponent, {\r\n      data: {\r\n        progress: this.progress\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.writingService.cancelWriting(this.progress);\r\n      } else {\r\n        this.startOrResumeWriting();\r\n      }\r\n    });\r\n  }\r\n  addUrl() {\r\n    console.log(\"add-url\");\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.writingForm);\r\n    if(this.writingForm.valid) {\r\n      const formValues = this.writingForm.value;\r\n      console.log(\"valid\", formValues);\r\n      \r\n    }\r\n  }\r\n}\r\n","<section   fxLayout=\"column\"\r\nfxLayoutAlign=\"center center\">\r\n  <section\r\n    class=\"quote current-writing\"\r\n\r\n  >\r\n    <pre>\r\n            \"Be ruthless about protecting writing days, i.e., do not cave in to endless requests to have \"essential\" and\r\n            \"long overdue\" meetings on those days. The funny thing is that, although writing has been my actual job for\r\n            several years now, I still seem to have to fight for time in which to do it. Some people do not seem to grasp\r\n            that I still have to sit down in peace and write the books, apparently believing that they pop up like mushrooms\r\n            without my connivance.\"\r\n            ― J.K. Rowling\r\n        </pre\r\n    >\r\n  </section>\r\n  <section class=\"clearfix\">\r\n    <section class=\"left\">\r\n      <section class=\"cat-news\">\r\n        <h4>Resources</h4>\r\n        <ul *ngFor=\"let new of news\">\r\n          <li>\r\n            <a href=\"{{ new }} \" target=\"_blank\">{{ new }}</a>\r\n          </li>\r\n        </ul>\r\n        <p>Add Research</p>\r\n        <button (click)=\"addUrl()\">+</button>\r\n      </section>\r\n      <mat-progress-spinner\r\n        mode=\"determinate\"\r\n        [value]=\"progress\"\r\n      ></mat-progress-spinner>\r\n      <h1>{{ progress }}%</h1>\r\n      <button mat-raised-button color=\"accent\" (click)=\"postCancel()\">\r\n        Pause writing\r\n      </button>\r\n      <hr />\r\n    </section>\r\n    <section class=\"right clearfix\">\r\n      <h3 class=\"title\">WRITING TEXT AREA FORM</h3>\r\n      <section class=\"writing-form\">\r\n        <form [formGroup]=\"writingForm\" (ngSubmit)=\"onSubmit()\">\r\n          <mat-form-field>\r\n            <label for=\"title\">Title</label>\r\n            <input\r\n              id=\"title\"\r\n              matInput\r\n              formControlName=\"title\"\r\n              placeholder=\"Title\"\r\n            />\r\n          </mat-form-field>\r\n          <br />\r\n          <mat-form-field> \r\n            <textarea\r\n              id=\"content\"\r\n              matInput\r\n              formControlName=\"content\"\r\n              placeholder=\"Write here, Write now...\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            [disabled]=\"!writingForm.valid\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        \r\n      </section>\r\n\r\n\r\n     <hr>\r\n    </section>\r\n  </section>\r\n</section>\r\n ","import { Component,  Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-stop-writing',\r\n  template: `<h1 mat-dialog-title>Are you sure?</h1>\r\n            <mat-dialog-content>\r\n              <p>You already got {{ passedData.progress }}% left of writing ...</p>\r\n            </mat-dialog-content>\r\n            <mat-dialog-actions>\r\n              <button mat-button [mat-dialog-close]=\"true\">Yes</button>\r\n              <button mat-button [mat-dialog-close]=\"false\">No</button>\r\n            </mat-dialog-actions>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class StopWritingComponent   {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) {}\r\n\r\n \r\n} ","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\n// import { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { MatTableDataSource  } from '@angular/material/table';\r\nimport {  MatSort } from '@angular/material/sort';\r\nimport {  MatPaginator } from '@angular/material/paginator';\r\n\r\nimport { WritingService } from '../writing.service';\r\nimport { WritingMod } from '../../../models/writing-mods.model';\r\nimport * as fromWriting from '../../../reducers/writing.reducer';\r\n\r\n@Component({\r\n  selector: 'app-grid-writings',\r\n  templateUrl: './grid-writings.component.html',\r\n  styleUrls: ['./grid-writings.component.scss']\r\n})\r\nexport class GridWritingsComponent implements OnInit, AfterViewInit { //, OnDestroy {\r\n\r\n  displayedColumns = ['date', 'name', 'durationGoal', 'wordCount', 'state'];\r\n  dataSource = new MatTableDataSource<WritingMod>();\r\n  // private exChangedSubscription: Subscription;\r\n\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private writingService: WritingService,\r\n    private store: Store<fromWriting.State>\r\n    ) { }\r\n\r\n  ngOnInit()  {\r\n    // this.dataSource.data = this.writingService.getCompletedOrCancelledWritings();\r\n    // this.exChangedSubscription = this.writingService.finishedWritingsChanged.subscribe(\r\n    this.store.select(fromWriting.getFinishedWritingMods).subscribe(\r\n      (writingMods: WritingMod[]) => {\r\n        this.dataSource.data = writingMods;\r\n      }\r\n    );\r\n    this.writingService.fetchCompletedOrCancelledWritings();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  blogFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   if (this.exChangedSubscription) {\r\n  //     this.exChangedSubscription.unsubscribe();\r\n  //   }\r\n  // }\r\n}\r\n","<div fxLayoutAlign=\"center center\">\r\n    <mat-form-field fxFlex=\"40%\">\r\n        <!-- <input type=\"text\" (keyup)=\"blogFilter($event.target.value)\" placeholder=\"Mod Filter\"> -->\r\n      <input matInput type=\"text\" (keyup)=\"blogFilter($event.target.value)\" placeholder=\"Mod Filter\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.date.toDate() | date:'yyyy/MM/dd h:mm:ss a'}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"wordCount\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Word Count</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.wordCount | number }}</mat-cell>\r\n    </ng-container>\r\n\r\n            <ng-container matColumnDef=\"durationGoal\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{ element.durationGoal | number }}</mat-cell>\r\n            </ng-container>\r\n\r\n    <ng-container matColumnDef=\"state\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>State</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.state }}</mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns:displayedColumns; \"></mat-row>\r\n\r\n  </mat-table>\r\n\r\n  <mat-paginator [pageSize]=\"5\" [pageSizeOptions]=\"[1, 5, 10, 20,30,40]\">\r\n  </mat-paginator>\r\n ","import { Component, OnInit,   OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { WritingService } from '../writing.service';\r\nimport { WritingMod } from '../../../models/writing-mods.model';\r\nimport { UiService } from '../../../service/ui.service';\r\nimport * as fromWriting from '../../../reducers/writing.reducer';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Component({\r\n  selector: 'app-new-writing',\r\n  templateUrl: './new-writing.component.html',\r\n  styleUrls: ['./new-writing.component.scss']\r\n})\r\nexport class NewWritingComponent implements OnInit { //, OnDestroy {\r\n  // @Output() writingStart = new EventEmitter<void>();\r\n  // writingMods: WritingMod[] = [];\r\n  // writingMods: Observable<WritingMod[]>;\r\n\r\n  // private writingSubscription: Subscription;\r\n  // writingMods: WritingMod[];\r\n  writingMods$: Observable<WritingMod[]>;\r\n\r\n  isLoading = true;\r\n  private loadingSubscription: Subscription;\r\n  // isLoading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private writingService: WritingService,\r\n    private uiService: UiService,\r\n    private store: Store<fromWriting.State>\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\r\n      isLoading => { this.isLoading = isLoading;  }    // GONNA KEEP SUBSCRIPTION FOR THIS LOADING SPINNER\r\n    );\r\n    // this.isLoading$ = this.store.select(fromRoot.getIsLoading);\r\n\r\n    // this.writingSubscription = this.writingService.writingsChanged.subscribe(\r\n    //   writingMods => { this.writingMods = writingMods; }\r\n    // );\r\n    this.writingMods$ = this.store.select(fromWriting.getAvailableWritingMods)\r\n  this.fetchWritings();\r\n  }\r\n\r\n  fetchWritings() {\r\n    this.writingService.fetchAvailableWritingMods();\r\n  }\r\n\r\n  onStartWriting(ngForm: NgForm) {\r\n    this.writingService.startWriting(ngForm.value.writing);  //pass in the id\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loadingSubscription) {\r\n      this.loadingSubscription.unsubscribe();\r\n    }\r\n    // if (this.writingSubscription) {\r\n    //   this.writingSubscription.unsubscribe();\r\n    // }\r\n  }\r\n}\r\n","<section class=\"new-writing\" fxLayout fxLayoutAlign=\"center\">\r\n    <form   (ngSubmit)=\"onStartWriting(f)\" #f=\"ngForm\">\r\n       <div class=\"menu\">\r\n        <mat-card fxFlex.xs=\"100%\" fxFlex=\"500px\">\r\n          <mat-card-title fxLayoutAlign=\"center\">Time to Write!</mat-card-title>\r\n          <mat-card-content fxLayoutAlign=\"center\">\r\n              <mat-form-field  class=\"white\" *ngIf=\"!isLoading && writingMods$ | async\">\r\n\r\n                  <mat-select placeholder=\"Category\" ngModel name=\"writing\" required>\r\n                      <mat-option *ngFor=\"let writing of writingMods$ | async\" [value]=\"writing.id\">\r\n                          {{ writing.name }}\r\n                      </mat-option>\r\n                  </mat-select>\r\n\r\n              </mat-form-field>\r\n              <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n          </mat-card-content>\r\n          <mat-card-actions fxLayoutAlign=\"center\" *ngIf=\"!isLoading\">\r\n              <button  *ngIf=\"writingMods$ | async\" type=\"submit\" mat-raised-button  [disabled]=\"f.invalid\">Start</button>\r\n              <button  *ngIf=\"!(writingMods$ | async)\" type=\"button\" mat-raised-button  (click)=\"fetchWritings()\">Fetch Again</button>\r\n          </mat-card-actions>\r\n      </mat-card>\r\n       </div>\r\n</form>\r\n</section>\r\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\n// import { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { MatTableDataSource  } from '@angular/material/table';\r\nimport {  MatSort } from '@angular/material/sort';\r\nimport {  MatPaginator } from '@angular/material/paginator';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\nimport { WritingService } from '../writing.service';\r\nimport { WritingMod } from '../../../models/writing-mods.model';\r\nimport * as fromWriting from '../../../reducers/writing.reducer';\r\n\r\n@Component({\r\n  selector: 'app-past-writings',\r\n  templateUrl: './past-writings.component.html',\r\n  styleUrls: ['./past-writings.component.scss']\r\n})\r\nexport class PastWritingsComponent implements OnInit, AfterViewInit { //, OnDestroy {\r\n\r\n  displayedColumns = ['date', 'name', 'durationGoal', 'wordCount', 'state'];\r\n  dataSource = new MatTableDataSource<WritingMod>();\r\n  // private exChangedSubscription: Subscription;\r\n\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private writingService: WritingService,\r\n    private store: Store<fromWriting.State>\r\n    ) { }\r\n\r\n  ngOnInit()  {\r\n    // this.dataSource.data = this.writingService.getCompletedOrCancelledWritings();\r\n    // this.exChangedSubscription = this.writingService.finishedWritingsChanged.subscribe(\r\n    this.store.select(fromWriting.getFinishedWritingMods).subscribe(\r\n      (writingMods: WritingMod[]) => {\r\n        this.dataSource.data = writingMods;\r\n      }\r\n    );\r\n    this.writingService.fetchCompletedOrCancelledWritings();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  blogFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   if (this.exChangedSubscription) {\r\n  //     this.exChangedSubscription.unsubscribe();\r\n  //   }\r\n  // }\r\n}\r\n","<div fxLayoutAlign=\"center center\">\r\n    <mat-form-field fxFlex=\"40%\">\r\n        <!-- <input type=\"text\" (keyup)=\"blogFilter($event.target.value)\" placeholder=\"Mod Filter\"> -->\r\n      <input matInput type=\"text\" (keyup)=\"blogFilter($event.target.value)\" placeholder=\"Mod Filter\">\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.date.toDate() | date:'yyyy/MM/dd h:mm:ss a'}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.name }}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"wordCount\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Word Count</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.wordCount | number }}</mat-cell>\r\n    </ng-container>\r\n\r\n            <ng-container matColumnDef=\"durationGoal\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">{{ element.durationGoal | number }}</mat-cell>\r\n            </ng-container>\r\n\r\n    <ng-container matColumnDef=\"state\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>State</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{ element.state }}</mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns:displayedColumns; \"></mat-row>\r\n\r\n  </mat-table>\r\n\r\n  <mat-paginator [pageSize]=\"5\" [pageSizeOptions]=\"[1, 5, 10, 20,30,40]\">\r\n  </mat-paginator>\r\n ","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { WritingService } from './writing.service';\r\nimport * as fromWriting from '../../reducers/writing.reducer';\r\n\r\n@Component({\r\n  selector: 'app-writing',\r\n  templateUrl: './writing.component.html',\r\n  styleUrls: ['./writing.component.scss']\r\n})\r\nexport class WritingComponent implements OnInit { //, OnDestroy {\r\n  // ongoingWriting = false;\r\n  ongoingWriting$ : Observable<boolean>;\r\n  // writingSubscription: Subscription;\r\n\r\n  constructor(\r\n    private writingService: WritingService,\r\n    private store: Store<fromWriting.State>\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    // this.writingSubscription = this.writingService.writingChanged.subscribe(\r\n    //   writing => {\r\n    //     if (writing) {\r\n    //       this.ongoingWriting = true;\r\n    //     } else {\r\n    //       this.ongoingWriting = false;\r\n    //     }\r\n    //   }\r\n    // );\r\n    this.ongoingWriting$ = this.store.select(fromWriting.getIsWriting);\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   if (this.writingSubscription) {\r\n  //     this.writingSubscription.unsubscribe();\r\n  //   }\r\n  // }\r\n}\r\n","<hr>\r\n<h2> <span class=\"daily-tech monoton text-box\">OUR DAILY TECH</span> </h2>\r\n<hr>\r\n<mat-tab-group *ngIf=\"!(ongoingWriting$ | async)\" center>\r\n\r\n  <mat-tab label=\"New Session\">\r\n    <!-- <app-new-writing (writingStart)=\"ongoingWriting = true\"></app-new-writing> -->\r\n    <app-new-writing ></app-new-writing>\r\n  </mat-tab>\r\n  <mat-tab label=\"Past Session Stats\">\r\n    <app-past-writings></app-past-writings>\r\n</mat-tab>\r\n<mat-tab label=\"Statistics Grid\">\r\n  <app-grid-writings></app-grid-writings>\r\n</mat-tab>\r\n</mat-tab-group>\r\n<app-current-writing *ngIf=\"ongoingWriting$ | async\" ></app-current-writing>\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { Subject } from 'rxjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { take } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { WritingMod } from '../../models/writing-mods.model';\r\nimport { UiService } from '../../service/ui.service';\r\nimport * as UI from '../../reducers/ui.actions';\r\nimport * as Writing from '../../reducers/writing.actions';\r\nimport * as fromWriting from '../../reducers/writing.reducer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class WritingService {\r\n  // writingChanged = new Subject<WritingMod>();\r\n  // writingsChanged = new Subject<WritingMod[]>();\r\n  // finishedWritingsChanged = new Subject<WritingMod[]>();\r\n\r\n  // urlsWebDev = ['https://www.wired.com/tag/the-web/','https://www.infoworld.com/category/web-development/'];\r\n  // urlsBlockchain = ['https://www.wired.com/tag/blockchain/','https://cointelegraph.com/tags/blockchain'];\r\n  // urlsAI = ['https://www.wired.com/tag/artificial-intelligence/','https://www.sciencedaily.com/news/computers_math/artificial_intelligence/'];\r\n  // urlsSoc = ['https://www.wired.com/','https://www.sociologylens.net/article-types/opinion/digital-sociology-reinvention-social-research-noortje-marres-digital-technology-contributes-sociology/18108'];\r\n  // urlsQuantum = ['https://www.wired.com/tag/quantum-computing/','https://phys.org/physics-news/quantum-physics/'];\r\n\r\n  // private availableWritingMods: WritingMod[] = [\r\n    // { id: '1a', name: 'Web Dev Affairs', news: this.urlsWebDev, category: 'web-dev-affairs', durationGoal: 120, wordCount: 4550, date: new Date(), state: null },\r\n     // ....\r\n  // ];\r\n  // private ongoingWriting: WritingMod;\r\n  // private writingMods: WritingMod[] = [];\r\n  private firebaseSubs: Subscription[] = [];\r\n\r\n  constructor(\r\n    private db: AngularFirestore,\r\n    private uiService: UiService,\r\n    private store: Store<fromWriting.State>\r\n    ) { }\r\n\r\n  fetchAvailableWritingMods() {\r\n    // return this.availableWritingMods.slice();\r\n    this.uiService.loadingStateChanged.next(true); // GONNA KEEP SUBSCRIPTION LOADER FOR NOW\r\n    // this.store.dispatch(new UI.StartLoading());\r\n    this.firebaseSubs.push(\r\n      this.db\r\n      .collection('writing-mods')\r\n      .snapshotChanges()\r\n      .pipe(map(docArray => {\r\n        return docArray.map(doc => {\r\n          return {\r\n            id: doc.payload.doc.id,\r\n            // spread operator pulling objects out of payload, and adding to object returned\r\n            name: doc.payload.doc.data()['name'],\r\n            news: doc.payload.doc.data()['news'],\r\n            durationGoal: doc.payload.doc.data()['durationGoal'],\r\n            wordCount: doc.payload.doc.data()['wordCount'],\r\n            date: doc.payload.doc.data()['date'],\r\n            state: doc.payload.doc.data()['state']\r\n          };\r\n        });\r\n      })\r\n      ).subscribe((writingModsArr: WritingMod[]) => {\r\n        console.log(writingModsArr);\r\n        this.uiService.loadingStateChanged.next(false);\r\n        // this.store.dispatch(new UI.StopLoading());\r\n\r\n        // this.availableWritingMods = writingMods;\r\n        // this.writingsChanged.next([...this.availableWritingMods]);\r\n        this.store.dispatch(new Writing.SetAvailableWritings(writingModsArr));\r\n      }, error => {\r\n        this.uiService.loadingStateChanged.next(false);\r\n        // this.store.dispatch(new UI.StopLoading());\r\n\r\n        this.uiService.showSnackBar('Database is down, and fetching Mods failed, please try again later', null, 3000);\r\n        // this.writingsChanged.next(null);\r\n       }));  // END FIREBASE SUBSCRIPTION ARRAY\r\n  }\r\n\r\n  startWriting(selectedId: string) {\r\n    // this.ongoingWriting = this.availableWritingMods.find(\r\n    //   ex => ex.id === selectedId\r\n    // );\r\n    // this.writingChanged.next({ ...this.ongoingWriting });\r\n    this.store.dispatch(new Writing.StartWriting(selectedId));\r\n  }\r\n\r\n  completeWriting() {\r\n    // this.writingMods.push({\r\n    this.store.select(fromWriting.getActiveWriting).pipe(take(1)).subscribe(writingModObj => {\r\n    this.addDataToDatabase({\r\n      // ...this.ongoingWriting,\r\n      ...writingModObj,\r\n      date: new Date(),\r\n      state: 'completed'\r\n    });\r\n    // this.ongoingWriting = null;\r\n    // this.writingChanged.next(null);\r\n    this.store.dispatch(new Writing.StopWriting());\r\n  });\r\n  }\r\n\r\n  cancelWriting(progress: number) {\r\n    // this.writingMods.push({\r\n    this.store.select(fromWriting.getActiveWriting).pipe(take(1)).subscribe(writingModObj => {\r\n    this.addDataToDatabase({\r\n      // ...this.ongoingWriting,\r\n      ...writingModObj,\r\n      // durationGoal: this.ongoingWriting.durationGoal * (progress / 100),\r\n      durationGoal: writingModObj.durationGoal * (progress / 100),\r\n      wordCount: writingModObj.durationGoal * (progress / 100),\r\n      date: new Date(),\r\n      state: 'cancelled'\r\n    });\r\n    // this.ongoingWriting = null;\r\n    // this.writingChanged.next(null);\r\n    this.store.dispatch(new Writing.StopWriting());\r\n  });\r\n  }\r\n\r\n  // getWritingExercise() {\r\n  //   return { ...this.ongoingWriting };\r\n  // }\r\n\r\n  fetchCompletedOrCancelledWritings() {\r\n    // return this.writingMods.slice();\r\n    this.firebaseSubs.push(\r\n      this.db\r\n      .collection('finished-writing-mods')\r\n      .valueChanges()\r\n      .subscribe((writingModsArr: WritingMod[]) => {\r\n        // this.finishedWritingsChanged.next(writingMods);\r\n        this.store.dispatch(new Writing.SetFinishedWritings(writingModsArr))\r\n      })\r\n    );  // END FIREBASE SUBSCRIPTION ARRAY\r\n  }\r\n\r\n  cancelSubscriptions() {\r\n    this.firebaseSubs.forEach(sub =>sub.unsubscribe());\r\n  }\r\n\r\n  private addDataToDatabase(writingModObj: WritingMod) {\r\n    this.db.collection('finished-writing-mods').add(writingModObj);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n// import { MatNativeDateModule } from '@angular/material';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n import {MatTooltipModule} from '@angular/material/tooltip';\r\n import { MatSnackBarModule } from '@angular/material/snack-bar';\r\n import { MatMenuModule } from '@angular/material/menu';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule\r\n  ],\r\n  exports: [MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n     MatSelectModule,\r\n      MatProgressSpinnerModule,\r\n      MatDialogModule,\r\n      MatTableModule,\r\n      MatSortModule,\r\n      MatPaginatorModule,\r\n      MatTooltipModule,\r\n      MatSnackBarModule,\r\n      MatMenuModule\r\n     ]\r\n})\r\nexport class MaterialModule { }\r\n","export class Post {\r\n  constructor(\r\n    public id?: number,\r\n    public did?: string,\r\n    public date?: string,\r\n    public author?: string,\r\n    public monthOrder?: string,\r\n    public cat3?: string,\r\n    public title?: string,\r\n    public post?: string,\r\n    public blogcite?: string,\r\n    public username?: string,\r\n  ) { }\r\n}    ","\r\n// import { ActionReducer } from '@ngrx/store';\r\nimport { ActionReducerMap, createFeatureSelector, createSelector, MetaReducer } from '@ngrx/store';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\nimport * as fromUi from './ui.reducer';\r\nimport * as fromAuth from './auth.reducer';\r\nimport  { NewsReducer } from './news.reducer';\r\nimport { NewsSearchReducer } from './news-search.reducer';\r\n\r\nexport interface State {\r\n  ui: fromUi.State;\r\n  auth: fromAuth.State;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  ui: fromUi.uiReducer,\r\n  auth: fromAuth.authReducer,\r\n};\r\n\r\nexport const getUiState = createFeatureSelector<fromUi.State>('ui');\r\nexport const getIsLoading = createSelector(getUiState, fromUi.getIsLoading);\r\n\r\nexport const getAuthState = createFeatureSelector<fromAuth.State>('auth');\r\nexport const getIsAuth = createSelector(getAuthState, fromAuth.getIsAuth);\r\n\r\n// export const reducers = {\r\n//   searchResults: NewsSearchReducer,\r\n//   menuState: NewsReducer\r\n// }\r\n// export const reducers: ActionReducerMap<State> = {\r\n// };\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport const  SET_AUTHENTICATED = '[Auth] Set Authenticated';\r\nexport const SET_UNAUTHENTICATED = '[Auth] Set Unauthenticated';\r\n\r\nexport class SetAuthenticated implements Action {\r\n  readonly type = SET_AUTHENTICATED;\r\n}\r\n\r\nexport class SetUnauthenticated implements Action {\r\n  readonly type = SET_UNAUTHENTICATED;\r\n}\r\n\r\nexport type AuthActions = SetAuthenticated | SetUnauthenticated;\r\n","import { Action } from '@ngrx/store';\r\nimport { AuthActions, SET_AUTHENTICATED, SET_UNAUTHENTICATED  } from './auth.actions';\r\n\r\nconst initialState: State = {\r\n  isAuthenticated: false\r\n};\r\n\r\nexport function authReducer(state = initialState, action: AuthActions) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        isAuthenticated: true\r\n      };\r\n      case SET_UNAUTHENTICATED:\r\n        return {\r\n          isAuthenticated: false\r\n        }\r\n      default: {\r\n        return state;\r\n      }\r\n  }\r\n}\r\n\r\nexport interface State {\r\n  isAuthenticated: boolean\r\n};\r\n\r\nexport const getIsAuth = (state: State) => state.isAuthenticated;\r\n","export const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT';\r\n\r\nexport function NewsSearchReducer(state, action) {\r\n    switch (action.type) {\r\n        case SET_SEARCH_RESULT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const SET_NEWS_STATE = 'SET_NEWS_STATE';\r\n\r\nexport function NewsReducer(state: boolean, action) {\r\n    switch (action.type) {\r\n        case SET_NEWS_STATE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport const START_LOADING = '[UI] START_LOADING';\r\nexport const STOP_LOADING = '[UI] STOP_LOADING';\r\n\r\nexport class StartLoading implements Action {\r\n  readonly type = START_LOADING;\r\n}\r\n\r\nexport class StopLoading implements Action {\r\n  readonly type = STOP_LOADING;\r\n}\r\n\r\nexport type UIActions = StartLoading | StopLoading;\r\n","import { Action } from '@ngrx/store';\r\nimport { START_LOADING, STOP_LOADING, UIActions } from './ui.actions';\r\n\r\nconst initialState: State = {\r\n  isLoading: false\r\n};\r\n\r\nexport function uiReducer(state = initialState, action: UIActions) {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return {\r\n        isLoading: true\r\n      };\r\n      case STOP_LOADING:\r\n        return {\r\n          isLoading: false\r\n        }\r\n      default: {\r\n        return state;\r\n      }\r\n  }\r\n}\r\n\r\nexport interface State {\r\n  isLoading: boolean;\r\n};\r\n\r\nexport const getIsLoading = (state: State) => state.isLoading;\r\n","import { Action } from '@ngrx/store';\r\nimport { WritingMod } from '../models/writing-mods.model';\r\n\r\nexport const SET_AVAILABLE_WRITINGS = '[Writing] Set Available Writings';\r\nexport const SET_FINISHED_WRITINGS = '[Writing] Set Finished Writings';\r\nexport const START_WRITING = '[Writing] Start Writing';\r\nexport const STOP_WRITING = '[Writing] Stop Writing';\r\n\r\nexport class SetAvailableWritings implements Action {\r\n  readonly type = SET_AVAILABLE_WRITINGS;\r\n  constructor(public payload: WritingMod[]) {}\r\n}\r\n\r\nexport class SetFinishedWritings implements Action {\r\n  readonly type = SET_FINISHED_WRITINGS;\r\n  constructor(public payload: WritingMod[]) {}\r\n}\r\n\r\nexport class StartWriting implements Action {\r\n  readonly type = START_WRITING;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class  StopWriting implements Action {\r\n  readonly type = STOP_WRITING;\r\n   // no payload bc already stored in NGRX\r\n}\r\n\r\nexport type WritingActions = SetAvailableWritings | SetFinishedWritings | StartWriting | StopWriting;\r\n","import { Action, createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport {\r\n  WritingActions,\r\n  SET_AVAILABLE_WRITINGS,\r\n  SET_FINISHED_WRITINGS,\r\n  START_WRITING,\r\n  STOP_WRITING,\r\n} from './writing.actions';\r\nimport { WritingMod } from '../models/writing-mods.model';\r\nimport * as fromRoot from './app.reducer';\r\n\r\nexport interface WritingState {\r\n  /// State for this module;\r\n  availableWritingMods: WritingMod[]; /// bc this is lazy loaded;\r\n  finishedWritingMods: WritingMod[]; // Writing State Knows about the app state, but app state doesn't know about Writing!!\r\n  activeWriting: WritingMod;\r\n}\r\n\r\nexport interface State extends fromRoot.State {\r\n  writing: WritingState;\r\n}\r\nconst initialState: WritingState = {\r\n  availableWritingMods: [], // based on writing state\r\n  finishedWritingMods: [],\r\n  activeWriting: null,\r\n};\r\n\r\nexport function writingReducer(state = initialState, action: WritingActions) {\r\n  switch (action.type) {\r\n    case SET_AVAILABLE_WRITINGS:\r\n      return {\r\n        ...state, // this will pull out available and finished\r\n       availableWritingMods: action.payload\r\n      };\r\n    case SET_FINISHED_WRITINGS:\r\n      return {\r\n        ...state, // this will pull out available and finished\r\n        finishedWritingMods: action.payload\r\n      };\r\n    case START_WRITING:\r\n      return {\r\n        ...state, // this will pull out available and finished\r\n        activeWriting: { ... state.availableWritingMods.find(ex => ex.id === action.payload) }\r\n      };\r\n    case STOP_WRITING:\r\n      return {\r\n        ...state,\r\n        activeWriting: null\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const getWritingState = createFeatureSelector<WritingState>('writing');\r\n\r\n// export const getAvailableWritingMods = (state: WritingState) => state.availableWritingMods;\r\nexport const getAvailableWritingMods = createSelector(getWritingState, (state: WritingState) => state.availableWritingMods);\r\n\r\nexport const getFinishedWritingMods = createSelector(getWritingState, (state: WritingState) => state.finishedWritingMods);\r\n\r\nexport const getActiveWriting = createSelector(getWritingState, (state: WritingState) => state.activeWriting);\r\n\r\nexport const getIsWriting = createSelector(getWritingState, (state: WritingState) => state.activeWriting != null);\r\n\r\n","// import { API_URL } from './../app.constants';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {map} from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport const TOKEN = 'token'\r\nexport const AUTHENTICATED_USER = 'AuthenticatedUser'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class AdminAuthenticationService {\r\n\r\n  base:string;\r\n  baseUrl:string;\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n    this.base = environment.BASE;\r\n    this.baseUrl = environment.API_URL;\r\n\r\n   }\r\n\r\n  // executeAuthenticationService(adminName, password) {\r\n    // Basic Authentication\r\n    // let basicAuthHeaderString = 'Basic ' + window.btoa(adminName + ':' + password);\r\n    // let headers = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    //   })\r\n    // return this.http.get<BasicAuthBean>(\r\n    //   `${this.baseUrl}/dailytech/login`,\r\n    //   {headers}).pipe(\r\n    //     map(\r\n    //       data => {\r\n    //         sessionStorage.setItem(AUTHENTICATED_USER, adminName);\r\n    //         sessionStorage.setItem(TOKEN, basicAuthHeaderString);\r\n    //         return data;\r\n    //       }\r\n    //     )\r\n    //   );\r\n\r\n  executeAuthJwtService(username, password) {\r\n    return this.http.post<any>(\r\n        `${this.base}/authenticate`,{\r\n          username,\r\n          password\r\n        }).pipe(\r\n          map(\r\n            data => {\r\n              sessionStorage.setItem(AUTHENTICATED_USER, username);\r\n              sessionStorage.setItem(TOKEN, `Bearer ${data.token}`);\r\n              return data;\r\n            }\r\n          )\r\n        );\r\n\r\n  }\r\n\r\n  getAuthenticatedUser() {\r\n    return sessionStorage.getItem(AUTHENTICATED_USER)\r\n  }\r\n  getAuthenticatedToken() {\r\n    if(this.getAuthenticatedUser())\r\n      return sessionStorage.getItem(TOKEN)\r\n  }\r\n\r\n  isAdminLoggedIn() {\r\n    let user = sessionStorage.getItem(AUTHENTICATED_USER)\r\n    return !(user === null)\r\n  }\r\n  logout(){\r\n    sessionStorage.removeItem(AUTHENTICATED_USER)\r\n    sessionStorage.removeItem(TOKEN)\r\n  }\r\n\r\n}\r\n\r\nexport class BasicAuthBean{\r\n  constructor(public message:string) { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from '@angular/router';\r\n\r\nimport { AdminAuthenticationService } from './admin-authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// ADMIN GUARD SERVICE\r\nexport class AdminGuardService implements CanActivate {\r\n\r\n  constructor(\r\n    private adminAuthService: AdminAuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n      //  ADMIN AUTH\r\n    if (this.adminAuthService.isAdminLoggedIn()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { AdminAuthenticationService } from './admin-authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HttpIntercepterBasicAuthService implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private adminAuthenticationService: AdminAuthenticationService\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    let adminAuthHeaderString = this.adminAuthenticationService.getAuthenticatedToken();\r\n    let username = this.adminAuthenticationService.getAuthenticatedUser()\r\n\r\n    if (adminAuthHeaderString && username) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: adminAuthHeaderString,\r\n          Accept: 'application/json',\r\n        }\r\n      })\r\n    }\r\n\r\n      return next.handle(request);\r\n\r\n    }\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Router } from '@angular/router';\r\n// import { Subject } from 'rxjs';\r\nimport { User } from '../../models/user.model';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { AuthData } from '../../models/auth-data.model';\r\nimport { WritingService } from '../../components/writing/writing.service';\r\nimport { UiService } from '../ui.service';\r\nimport * as fromRoot from '../../reducers/app.reducer';\r\nimport * as UI from '../../reducers/ui.actions';\r\nimport * as Auth from '../../reducers/auth.actions'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtAuthService {\r\n  // private user: User;\r\n  // authChange = new Subject<boolean>();\r\n  // private isAuthenticated = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private afAuth: AngularFireAuth,\r\n    private writingService: WritingService,\r\n    private uiService: UiService,\r\n    // private store: Store<{ ui: fromApp.State }>\r\n    private store: Store<fromRoot.State>\r\n    ) { }  // Dispatch actions & Listen to Changes\r\n\r\n\r\n    initAuthListener() {\r\n      this.afAuth.authState.subscribe(user => {\r\n        if (user) {\r\n          // this.isAuthenticated = true;\r\n          // this.authChange.next(true);\r\n          this.store.dispatch(new Auth.SetAuthenticated());\r\n          this.router.navigate(['/writing']);\r\n        } else {\r\n          this.writingService.cancelSubscriptions();\r\n          // this.isAuthenticated = false;\r\n          // this.authChange.next(false);\r\n          this.store.dispatch(new Auth.SetUnauthenticated());\r\n          this.router.navigate(['/']);\r\n        }\r\n      });\r\n    }\r\n  registerUser(authData: AuthData) {\r\n    // this.uiService.loadingStateChanged.next(true);\r\n                // DISPATCHING THE ACTION WHEN START LOADING\r\n    // this.store.dispatch({ type: 'START_LOADING' });\r\n    this.store.dispatch(new UI.StartLoading());\r\n\r\n    this.afAuth.auth.createUserWithEmailAndPassword(\r\n      authData.email,\r\n      authData.password\r\n    )\r\n    .then(result => {\r\n      console.log(result);\r\n      // this.authSuccessful();\r\n      // this.uiService.loadingStateChanged.next(false);\r\n              // DISPATCHING THE ACTION WHEN STOP LOADING\r\n      // this.store.dispatch({ type: 'STOP_LOADING' });\r\n      this.store.dispatch(new UI.StopLoading());\r\n\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      // this.uiService.loadingStateChanged.next(false);\r\n      // this.store.dispatch({ type: 'STOP_LOADING' });\r\n      this.store.dispatch(new UI.StopLoading());\r\n      this.uiService.showSnackBar(error.message, null, 2500  );\r\n    });\r\n  }\r\n\r\n  login(authData: AuthData) {\r\n    // this.uiService.loadingStateChanged.next(true);\r\n    // this.store.dispatch({ type: 'START_LOADING' });\r\n    this.store.dispatch(new UI.StartLoading());\r\n    this.afAuth.auth\r\n      .signInWithEmailAndPassword(authData.email, authData.password)\r\n      .then(result => {\r\n        // this.uiService.loadingStateChanged.next(false);\r\n        // this.store.dispatch({ type: 'STOP_LOADING' });\r\n        this.store.dispatch(new UI.StopLoading());\r\n        console.log(\"logged in\" + result);\r\n        // this.authSuccessful();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        // this.uiService.loadingStateChanged.next(false);\r\n        // this.store.dispatch({ type: 'STOP_LOADING' });\r\n      this.store.dispatch(new UI.StopLoading());\r\n        this.uiService.showSnackBar(error.message, null, 2500  );\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.afAuth.auth.signOut();\r\n    // this.writingService.cancelSubscriptions();\r\n    // this.authChange.next(false);\r\n    // this.router.navigate(['/login'])\r\n    // this.isAuthenticated = false;\r\n  }\r\n\r\n  // private authSuccessful() {\r\n  //   this.isAuthenticated = true;\r\n  //   this.authChange.next(true);\r\n  //   this.router.navigate(['/writing'])\r\n  // }\r\n\r\n  // isAuth() {\r\n  //   return this.isAuthenticated;\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  CanLoad,\r\n  Route,\r\n} from '@angular/router';\r\nimport { pipe } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { JwtAuthService } from './jwt-auth.service';\r\nimport { AdminAuthenticationService } from './admin-authentication.service';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../reducers/app.reducer';\r\n\r\n@Injectable()\r\nexport class UserGuardService implements CanActivate, CanLoad {\r\n  constructor(\r\n    private adminAuthService: AdminAuthenticationService,\r\n    // private authService: JwtAuthService,\r\n    private store: Store<fromRoot.State>,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    // USER AUTH  ----------------------   ADMIN AUTH\r\n    // if (this.authService.isAuth() || this.adminAuthService.isAdminLoggedIn()) {\r\n\r\n    if (\r\n      this.store.select(fromRoot.getIsAuth).pipe(take(1)) ||\r\n      this.adminAuthService.isAdminLoggedIn()\r\n    ) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n  canLoad(route: Route) {\r\n    // if (this.authService.isAuth()) {\r\n    //   return true;\r\n    // } else {\r\n    //   this.router.navigate(['/login']);\r\n    // }\r\n    if (this.store.select(fromRoot.getIsAuth).pipe(take(1))) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport class DailyTechBean {\r\n  constructor(public post: string) { }\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminDataService {\r\n\r\n  baseUrl:string;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n\r\n    this.baseUrl = environment.API_URL;\r\n\r\n   }\r\n\r\n  executeParameterService(name) {\r\n    // let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n    // let header = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    // })\r\n    return this.http.get<DailyTechBean>(`${this.baseUrl}/dailytech/user/${name}`,\r\n    // {headers: header}\r\n    );\r\n  }\r\n\r\n  // createBasicAuthenticationHttpHeader() {\r\n  //   let username = 'user'\r\n  //   let password = 'pass'\r\n  //   let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\r\n  //   return basicAuthHeaderString;\r\n  // }\r\n\r\n  executeAdminService() {\r\n    return this.http.get<DailyTechBean>(`${this.baseUrl}/dailytech`);\r\n  }\r\n  errorService() {\r\n    return this.http.get<DailyTechBean>(`${this.baseUrl}/dailytech/error`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Character } from '../models/Character';  \r\nimport { environment } from  '../../environments/environment';\r\n\r\n// @Injectable is a decorator that marks a class as a target for\r\n// dependency injection. The class needs to have the HttpClient\r\n// object injected into it. This class is a candidate for dependency\r\n// injection because it is declared inside the AppModule's providers array.\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GrootService {\r\n \r\n\r\n  private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n \r\n  constructor(private http :HttpClient) { \r\n \r\n\r\n   }\r\n      \r\n  // addCharacter(char :Character) :Observable<Character> {\r\n  //   return this.http.post<Character>(\"http://localhost:8080/GrootApp/addCharacters.do\", char, {headers: this.headers});\r\n  // }\r\n\r\n  // getGroot= function() {\r\n  //   console.log(this.title);\r\n  // }\r\n\r\n  public_key:string = '5fbd9e22b0c348faa25fd3d07bee8248';\r\n  hash: string ='dce73dc128d232d3a6c22decdf3b5f272bbc5178';\r\n  ts: any = Math.floor(Date.now() / 1000);\r\n  // new Date().getTime() \r\n  // new Date().valueOf()\r\n// NASA\r\n//   let url = \"https://api.nasa.gov/planetary/apod?api_key=mF6DQEqY3WtCubgab5P2otQQ6bP1b8nY24VmiJw0\";\r\n// STAR WARS \r\n//  xhttp.open(\"GET\", \"https://swapi.co/api/people/\" + randomNum + \"/?format=json\", true);\r\n/*  char.name;   char.height;   char.eye_color; */\r\n \r\n  getCharacters =  () => {\r\n    return this.http.get(`http://gateway.marvel.com/v1/public/characters?apikey=${this.public_key}&ts=${this.ts}&hash=${this.hash}`);\r\n  }\r\n\r\n  getPhotos(albumId: any) {\r\n    return this.http.get(`https://jsonplaceholder.typicode.com/photos?albumId=${albumId}`);\r\n   \r\n  }\r\n\r\n  getAlbums =  () => {\r\n    return this.http.get('https://jsonplaceholder.typicode.com/albums');\r\n    // return this.http.get('https://swapi.co/api/people');\r\n  }\r\n  \r\n  getStarWars = () => {\r\n    return this.http.get('https://swapi.co/api/people/1/?format=json');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeysService {\r\n\r\n  nasaUrl:string = '';\r\n  googleUrl:string = '';\r\n  nytUrl: string = '';\r\n\r\n  nasaApi:string = '';\r\n  nytApi: string = '';\r\n //crupto\r\n      \r\n private rinkebyUrl = environment.rinkebyUrl;\r\n moralisApi:string =  `${environment.cle_url}/getMoralisApi`;\r\n moralisKey:string = \"\";\r\n  constructor(\r\n    private http: HttpClient,\r\n    ) {\r\n      this.googleUrl = environment.google_url;\r\n      this.nasaUrl = environment.nasa_url;\r\n      this.nytUrl = environment.nyt_url;\r\n     \r\n\r\n    }\r\n\r\n  getGoogleApi() {\r\n    this.http\r\n      .get(`${this.googleUrl}`)\r\n      .subscribe((response) => {\r\n        //console.log(response);\r\n        if (response[\"googleMapAPIKey\"] != undefined) {\r\n          new Promise<void>((resolve) => {\r\n            let script: HTMLScriptElement = document.createElement(\"script\");\r\n            script.addEventListener(\"load\", (r) => resolve());\r\n\r\n            script.src = `http://maps.googleapis.com/maps/api/js?key=${response[\"googleMapAPIKey\"][0]}`;\r\n            // script.src = `http://maps.googleapis.com/maps/api/js?key=${environment.googleMapAPIKey}`;\r\n\r\n            document.head.appendChild(script);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getNasaApi() {\r\n    this.http\r\n      .get(`${this.nasaUrl}`)\r\n      .subscribe((response) => {\r\n            // console.log(response[\"nasaAPIKey\"][0]);\r\n            this.nasaApi = response[\"nasaAPIKey\"][0];\r\n      });\r\n      return this.nasaApi;\r\n  }\r\n  getNytApi() {\r\n    this.http\r\n      .get(`${this.nytUrl}`)\r\n      .subscribe((response) => {\r\n            // console.log(response[\"NYT_API\"][0]);\r\n            this.nytApi = response[\"NYT_API\"][0];\r\n      });\r\n      return this.nytApi;\r\n  }\r\n  \r\n  getMoralisKey() {\r\n    this.http.get(`${this.moralisApi}`)\r\n    .subscribe((data:any) => {\r\n      if(data[\"MORALIS_API_KEY\"] != undefined){\r\n        this.moralisKey = data[\"MORALIS_API_KEY\"][0];\r\n      }\r\n      });\r\n      return this.moralisKey;\r\n  } \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoggingService {\r\n    prevlog: string;\r\n\r\n    printLog(message:string) {\r\n        console.log(message);\r\n        console.log(this.prevlog || '__no previous log__');\r\n        this.prevlog = message;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable()\r\nexport class UiService {\r\n\r\n  loadingStateChanged = new Subject<boolean>();\r\n  \r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  showSnackBar(message, action, duration) {\r\n    this.snackBar.open(message, action, {\r\n      duration: duration\r\n    });\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\n\r\n\r\nexport function createHttpObservable(url:string) {\r\n    return Observable.create(observer => {\r\n\r\n        const controller = new AbortController();\r\n        const signal = controller.signal;\r\n        fetch(url, {signal})\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    observer.error('Request failed with status code: ' + response.status);\r\n                }\r\n                return response;\r\n            })\r\n            .then(body => {\r\n                observer.next(body);\r\n                observer.complete();\r\n            })\r\n            .catch(err => {\r\n                observer.error(err);\r\n            });\r\n        return () => controller.abort()\r\n\r\n    });\r\n}\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n  name: 'pipeCapitalizeCategory'\r\n})\r\n\r\nexport class PipeCapitalizeCategoryPipe implements PipeTransform {\r\n\r\n  constructor(private titlecasePipe: TitleCasePipe) {}\r\n\r\n  transform(value: any, ...args: any[]): any {\r\n    if (typeof value == 'string') {\r\n      if (value.toLowerCase() == 'nyregion') {\r\n        return 'NY Region';\r\n      }\r\n      if (value.toLowerCase() == 'realestate') {\r\n        return 'Real Estate';\r\n      } else if (value.toLowerCase() == 'sundayreview') {\r\n        return 'Sunday Review';\r\n      } else if (value.toLowerCase() == 'tmagazine') {\r\n        return 'T Magazine';\r\n      }\r\n      return this.titlecasePipe.transform(value);\r\n    }\r\n    return value;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } from '@techiediaries/ngx-qrcode';\r\n\r\n@Component({\r\n  selector: 'app-qrcode',\r\n  templateUrl: './qrcode.component.html',\r\n  styleUrls: ['./qrcode.component.css']\r\n})\r\nexport class QrcodeComponent implements OnInit {\r\n  // https://www.techiediaries.com/ngx-qrcode/\r\n  //encoding modes (numeric, alphanumeric, byte/binary, and kanji) to\r\n  elementType = NgxQrcodeElementTypes.URL;\r\n  correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\r\n  value = 'https://blog.ourdailytech.net/';\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ngx-qrcode\r\n  [elementType]=\"elementType\"\r\n  [errorCorrectionLevel]=\"correctionLevel\"\r\n  [value]=\"value\"\r\n  cssClass=\"bshadow\"></ngx-qrcode>\r\n\r\n  <!-- <textarea [(ngModel)] = \"value\"></textarea> -->","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  transform(value: any, args?: any): any {\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, from, Observable, Subject, timer} from 'rxjs';\r\n \r\nimport {delayWhen, filter, map,  shareReplay, tap, withLatestFrom} from 'rxjs/operators';\r\nimport {createHttpObservable} from './observable';  \r\nimport { Chain } from '../models/chain';\r\nimport { environment } from 'src/environments/environment';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\n\r\nexport class Store {\r\n\r\n    private subjectChain = new BehaviorSubject<Chain[]>([]);\r\n\r\n    chains$: Observable<Chain[]> = this.subjectChain.asObservable();\r\n\r\n\r\n    init() {\r\n        const baseUrl = environment.local_url; \r\n        const http$ = createHttpObservable(`${baseUrl}/chains`);\r\n        console.log(this.chains$.subscribe())\r\n        http$\r\n            .pipe(\r\n                tap(() => console.log('HTTP request executed')),\r\n                map(res => Object.values(res['payload']))\r\n            )\r\n            .subscribe(\r\n                chains => this.subjectChain.next(chains)\r\n            );\r\n    }\r\n    selectAllChains() {\r\n        console.log(\"chainsSelct\")\r\n        console.log(this.chains$.subscribe())\r\n        return this.noFilter();\r\n    }\r\n    selectEthereumChains() {\r\n        return this.filterByCategory('ETHEREUM');\r\n    }\r\n\r\n    selectPolygonChains() {\r\n        return this.filterByCategory('POLYGON');\r\n    }\r\n\r\n    selectChainById(chainId:number) {\r\n        return this.chains$\r\n            .pipe(\r\n                map(chains => chains.find(chain => +chain.id == chainId)),\r\n                filter(chain => !!chain)\r\n\r\n            );\r\n    }\r\n    noFilter() {\r\n        return this.chains$;\r\n    }\r\n    filterByCategory(category: string) {\r\n        return this.chains$\r\n            .pipe(\r\n                map(chains => chains\r\n                    .filter(chain => chain.category == category))\r\n            );\r\n    }\r\n\r\n    saveChain(chainId:number, changes): Observable<any> {\r\n\r\n        const chains = this.subjectChain.getValue();\r\n\r\n        const chainIndex = chains.findIndex(chain => +chain.id == chainId);\r\n\r\n        const newChains = chains.slice(0);\r\n\r\n        newChains[chainIndex] = {\r\n            ...chains[chainIndex],\r\n            ...changes\r\n        };\r\n\r\n        this.subjectChain.next(newChains);\r\n\r\n        return from(fetch(`/api/chains/${chainId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(changes),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n  ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { WritingComponent } from './components/writing/writing.component';\r\nimport { CurrentWritingComponent } from './components/writing/current-writing/current-writing.component';\r\nimport { NewWritingComponent } from './components/writing/new-writing/new-writing.component';\r\nimport { PastWritingsComponent } from './components/writing/past-writings/past-writings.component';\r\nimport { GridWritingsComponent } from './components/writing/grid-writings/grid-writings.component';\r\nimport { StopWritingComponent } from './components/writing/current-writing/stop-writing.component';\r\nimport { MaterialModule } from './material.module';\r\n// import { WritingRoutingModule } from './writing-routing.module';\r\nimport { writingReducer } from './reducers/writing.reducer';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WritingComponent,\r\n    CurrentWritingComponent,\r\n    NewWritingComponent,\r\n    PastWritingsComponent,\r\n    GridWritingsComponent,\r\n    StopWritingComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule, \r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    // WritingRoutingModule\r\n    StoreModule.forFeature('writing', writingReducer) //adding unique identifier\r\n  ],\r\n  entryComponents: [StopWritingComponent]\r\n})\r\nexport class WritingModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n\r\nexport const environment = {\r\n    production: false,\r\n    \r\n  firebase: {\r\n    // apiKey: '${{ secrets.FIREBASE_API_KEY }}',\r\n    apiKey: 'AIzaSyASxeRaQ346hnCcJ2AfcJ70KxFgHPahM9w',\r\n    authDomain: 'ourdailytechdata2.firebaseapp.com',\r\n    databaseURL: '',\r\n    projectId: 'ourdailytechdata2',\r\n    storageBucket: 'ourdailytechdata2.firebasestorage.app',\r\n    messagingSenderId: '53863879417',\r\n    appId: '1:53863879417:web:d50e122439523c3a024828',\r\n    measurementId: '',\r\n},\r\n// Firebase-related APIs use API keys only to identify the Firebase project or app, not for authorization to call the API (like some other APIs allow). Authorization for Firebase-related APIs is handled separately from the API key, either through Google Cloud IAM permissions, Firebase Security Rules, or Firebase App Check. This is why it's OK to include Firebase API keys in your code when you use them only with Firebase-related APIs.\r\n// gemini_api_key: process.env['GEMINI_API_KEY'], \r\n  gemini_api_key: 'AIzaSyC75wo7wv_bW4kIib0IrFlPP6fhfwSg6C0',\r\n  debug_token: '',\r\n\r\n//   //crypto\r\nrinkebyUrl: 'https://api-rinkeby.etherscan.io/api',\r\nlocal_url: 'http://localhost:9000',\r\nnftsURL: '//34.199.129.2:9000',\r\nnft_url: '//localhost:8080/api' ,\r\ntest_env: '', \r\ncle_url: 'http://34.199.129.2:8080/login',\r\n\r\n  // other\r\n  BASE: \"http://34.199.129.2:8080\",\r\n  API_URL: \"http://34.199.129.2:8080/api\", \r\n  apiKeyNYT: '06voWGzUHt0AJNvF2CeIqGezsRBQTZd5',\r\n  nyt_url: \"http://34.199.129.2:8080/login/getNytApi\",\r\n  apiUrlNYT: \"https://api.nytimes.com/svc\",\r\n  marvelKey: '5fbd9e22b0c348faa25fd3d07bee8248',\r\n  google_url: \"http://34.199.129.2:8080/login/getGoogleApi\",\r\n  nasa_url: \"http://34.199.129.2:8080/login/getNasaApi\", \r\n  json_url: \"http://localhost:3000/nasa\",  \r\n    aws_url: \"https://cxk6wy94h3.execute-api.us-east-1.amazonaws.com/dev/nasa\", \r\n  \r\n\r\n\r\n};\r\n ","import 'hammerjs';\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}