service: dailytech-aws-node-post
frameworkVersion: '3'

custom:
  tableName: 'posts-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItRem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    POST_TABLE: ${self:custom.tableName}

functions:
  create:
    handler: handler/createPost.createPost
    events:
      - http:
          path: posts
          method: post
          cors: true

  list:
    handler: handler/listPosts.listPosts
    events:
      - http:
          path: posts/list
          method: get
          cors: true

  get:
    handler: handler/getPost.getPost
    events:
      - http:
          path: posts/{id}
          method: get
          cors: true

  update:
    handler: handler/updatePost.updatePost
    events:
      - http:
          path: posts/update/{id}
          method: put
          cors: true

  delete:
    handler: handler/deletePost.deletePost
    events:
      - http:
          path: posts/delete/{id}
          method: delete
          cors: true
          

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
